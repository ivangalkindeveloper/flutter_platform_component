import 'package:flutter_platform_component/flutter_platform_component.dart';
import 'package:flutter/gestures.dart';
import 'package:flutter/widgets.dart';

class FPCTextSpanItem {
  static InlineSpan thin10White(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin10White(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin10WhiteAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin10WhiteAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin10Black(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin10Black(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin10BlackAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin10BlackAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin10Primary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin10Primary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin10PrimaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin10PrimaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin10PrimaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin10PrimaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin10PrimaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin10PrimaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin10Secondary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin10Secondary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin10SecondaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin10SecondaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin10SecondaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin10SecondaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin10SecondaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin10SecondaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin10Accent(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin10Accent(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin10AccentInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin10AccentInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin10AccentLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin10AccentLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin10AccentDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin10AccentDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin10Grey(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin10Grey(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin10GreyLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin10GreyLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin10GreyDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin10GreyDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin10Info(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin10Info(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin10InfoLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin10InfoLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin10InfoDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin10InfoDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin10Success(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin10Success(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin10SuccessLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin10SuccessLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin10SuccessDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin10SuccessDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin10Warning(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin10Warning(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin10WarningLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin10WarningLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin10WarningDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin10WarningDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin10Danger(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin10Danger(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin10DangerLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin10DangerLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin10DangerDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin10DangerDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin11White(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin11White(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin11WhiteAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin11WhiteAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin11Black(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin11Black(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin11BlackAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin11BlackAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin11Primary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin11Primary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin11PrimaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin11PrimaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin11PrimaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin11PrimaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin11PrimaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin11PrimaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin11Secondary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin11Secondary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin11SecondaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin11SecondaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin11SecondaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin11SecondaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin11SecondaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin11SecondaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin11Accent(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin11Accent(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin11AccentInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin11AccentInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin11AccentLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin11AccentLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin11AccentDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin11AccentDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin11Grey(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin11Grey(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin11GreyLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin11GreyLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin11GreyDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin11GreyDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin11Info(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin11Info(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin11InfoLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin11InfoLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin11InfoDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin11InfoDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin11Success(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin11Success(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin11SuccessLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin11SuccessLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin11SuccessDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin11SuccessDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin11Warning(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin11Warning(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin11WarningLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin11WarningLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin11WarningDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin11WarningDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin11Danger(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin11Danger(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin11DangerLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin11DangerLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin11DangerDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin11DangerDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin12White(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin12White(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin12WhiteAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin12WhiteAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin12Black(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin12Black(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin12BlackAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin12BlackAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin12Primary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin12Primary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin12PrimaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin12PrimaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin12PrimaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin12PrimaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin12PrimaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin12PrimaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin12Secondary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin12Secondary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin12SecondaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin12SecondaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin12SecondaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin12SecondaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin12SecondaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin12SecondaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin12Accent(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin12Accent(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin12AccentInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin12AccentInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin12AccentLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin12AccentLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin12AccentDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin12AccentDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin12Grey(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin12Grey(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin12GreyLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin12GreyLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin12GreyDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin12GreyDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin12Info(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin12Info(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin12InfoLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin12InfoLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin12InfoDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin12InfoDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin12Success(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin12Success(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin12SuccessLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin12SuccessLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin12SuccessDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin12SuccessDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin12Warning(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin12Warning(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin12WarningLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin12WarningLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin12WarningDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin12WarningDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin12Danger(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin12Danger(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin12DangerLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin12DangerLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin12DangerDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin12DangerDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin13White(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin13White(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin13WhiteAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin13WhiteAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin13Black(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin13Black(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin13BlackAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin13BlackAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin13Primary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin13Primary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin13PrimaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin13PrimaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin13PrimaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin13PrimaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin13PrimaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin13PrimaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin13Secondary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin13Secondary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin13SecondaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin13SecondaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin13SecondaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin13SecondaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin13SecondaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin13SecondaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin13Accent(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin13Accent(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin13AccentInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin13AccentInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin13AccentLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin13AccentLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin13AccentDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin13AccentDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin13Grey(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin13Grey(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin13GreyLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin13GreyLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin13GreyDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin13GreyDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin13Info(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin13Info(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin13InfoLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin13InfoLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin13InfoDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin13InfoDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin13Success(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin13Success(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin13SuccessLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin13SuccessLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin13SuccessDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin13SuccessDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin13Warning(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin13Warning(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin13WarningLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin13WarningLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin13WarningDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin13WarningDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin13Danger(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin13Danger(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin13DangerLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin13DangerLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin13DangerDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin13DangerDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin14White(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin14White(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin14WhiteAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin14WhiteAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin14Black(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin14Black(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin14BlackAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin14BlackAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin14Primary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin14Primary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin14PrimaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin14PrimaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin14PrimaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin14PrimaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin14PrimaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin14PrimaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin14Secondary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin14Secondary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin14SecondaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin14SecondaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin14SecondaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin14SecondaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin14SecondaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin14SecondaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin14Accent(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin14Accent(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin14AccentInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin14AccentInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin14AccentLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin14AccentLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin14AccentDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin14AccentDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin14Grey(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin14Grey(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin14GreyLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin14GreyLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin14GreyDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin14GreyDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin14Info(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin14Info(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin14InfoLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin14InfoLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin14InfoDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin14InfoDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin14Success(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin14Success(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin14SuccessLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin14SuccessLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin14SuccessDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin14SuccessDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin14Warning(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin14Warning(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin14WarningLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin14WarningLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin14WarningDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin14WarningDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin14Danger(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin14Danger(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin14DangerLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin14DangerLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin14DangerDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin14DangerDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin15White(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin15White(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin15WhiteAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin15WhiteAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin15Black(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin15Black(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin15BlackAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin15BlackAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin15Primary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin15Primary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin15PrimaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin15PrimaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin15PrimaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin15PrimaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin15PrimaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin15PrimaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin15Secondary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin15Secondary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin15SecondaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin15SecondaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin15SecondaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin15SecondaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin15SecondaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin15SecondaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin15Accent(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin15Accent(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin15AccentInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin15AccentInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin15AccentLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin15AccentLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin15AccentDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin15AccentDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin15Grey(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin15Grey(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin15GreyLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin15GreyLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin15GreyDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin15GreyDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin15Info(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin15Info(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin15InfoLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin15InfoLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin15InfoDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin15InfoDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin15Success(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin15Success(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin15SuccessLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin15SuccessLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin15SuccessDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin15SuccessDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin15Warning(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin15Warning(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin15WarningLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin15WarningLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin15WarningDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin15WarningDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin15Danger(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin15Danger(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin15DangerLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin15DangerLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin15DangerDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin15DangerDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin16White(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin16White(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin16WhiteAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin16WhiteAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin16Black(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin16Black(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin16BlackAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin16BlackAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin16Primary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin16Primary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin16PrimaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin16PrimaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin16PrimaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin16PrimaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin16PrimaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin16PrimaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin16Secondary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin16Secondary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin16SecondaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin16SecondaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin16SecondaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin16SecondaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin16SecondaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin16SecondaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin16Accent(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin16Accent(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin16AccentInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin16AccentInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin16AccentLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin16AccentLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin16AccentDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin16AccentDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin16Grey(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin16Grey(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin16GreyLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin16GreyLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin16GreyDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin16GreyDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin16Info(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin16Info(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin16InfoLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin16InfoLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin16InfoDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin16InfoDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin16Success(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin16Success(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin16SuccessLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin16SuccessLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin16SuccessDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin16SuccessDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin16Warning(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin16Warning(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin16WarningLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin16WarningLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin16WarningDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin16WarningDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin16Danger(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin16Danger(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin16DangerLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin16DangerLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin16DangerDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin16DangerDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin17White(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin17White(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin17WhiteAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin17WhiteAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin17Black(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin17Black(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin17BlackAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin17BlackAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin17Primary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin17Primary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin17PrimaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin17PrimaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin17PrimaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin17PrimaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin17PrimaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin17PrimaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin17Secondary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin17Secondary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin17SecondaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin17SecondaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin17SecondaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin17SecondaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin17SecondaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin17SecondaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin17Accent(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin17Accent(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin17AccentInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin17AccentInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin17AccentLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin17AccentLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin17AccentDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin17AccentDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin17Grey(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin17Grey(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin17GreyLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin17GreyLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin17GreyDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin17GreyDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin17Info(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin17Info(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin17InfoLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin17InfoLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin17InfoDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin17InfoDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin17Success(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin17Success(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin17SuccessLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin17SuccessLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin17SuccessDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin17SuccessDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin17Warning(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin17Warning(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin17WarningLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin17WarningLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin17WarningDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin17WarningDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin17Danger(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin17Danger(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin17DangerLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin17DangerLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin17DangerDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin17DangerDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin18White(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin18White(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin18WhiteAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin18WhiteAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin18Black(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin18Black(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin18BlackAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin18BlackAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin18Primary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin18Primary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin18PrimaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin18PrimaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin18PrimaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin18PrimaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin18PrimaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin18PrimaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin18Secondary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin18Secondary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin18SecondaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin18SecondaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin18SecondaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin18SecondaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin18SecondaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin18SecondaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin18Accent(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin18Accent(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin18AccentInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin18AccentInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin18AccentLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin18AccentLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin18AccentDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin18AccentDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin18Grey(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin18Grey(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin18GreyLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin18GreyLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin18GreyDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin18GreyDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin18Info(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin18Info(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin18InfoLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin18InfoLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin18InfoDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin18InfoDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin18Success(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin18Success(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin18SuccessLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin18SuccessLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin18SuccessDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin18SuccessDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin18Warning(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin18Warning(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin18WarningLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin18WarningLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin18WarningDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin18WarningDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin18Danger(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin18Danger(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin18DangerLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin18DangerLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin18DangerDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin18DangerDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin19White(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin19White(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin19WhiteAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin19WhiteAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin19Black(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin19Black(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin19BlackAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin19BlackAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin19Primary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin19Primary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin19PrimaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin19PrimaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin19PrimaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin19PrimaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin19PrimaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin19PrimaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin19Secondary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin19Secondary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin19SecondaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin19SecondaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin19SecondaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin19SecondaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin19SecondaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin19SecondaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin19Accent(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin19Accent(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin19AccentInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin19AccentInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin19AccentLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin19AccentLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin19AccentDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin19AccentDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin19Grey(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin19Grey(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin19GreyLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin19GreyLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin19GreyDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin19GreyDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin19Info(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin19Info(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin19InfoLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin19InfoLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin19InfoDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin19InfoDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin19Success(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin19Success(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin19SuccessLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin19SuccessLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin19SuccessDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin19SuccessDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin19Warning(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin19Warning(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin19WarningLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin19WarningLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin19WarningDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin19WarningDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin19Danger(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin19Danger(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin19DangerLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin19DangerLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin19DangerDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin19DangerDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin20White(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin20White(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin20WhiteAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin20WhiteAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin20Black(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin20Black(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin20BlackAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin20BlackAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin20Primary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin20Primary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin20PrimaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin20PrimaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin20PrimaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin20PrimaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin20PrimaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin20PrimaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin20Secondary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin20Secondary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin20SecondaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin20SecondaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin20SecondaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin20SecondaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin20SecondaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin20SecondaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin20Accent(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin20Accent(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin20AccentInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin20AccentInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin20AccentLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin20AccentLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin20AccentDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin20AccentDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin20Grey(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin20Grey(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin20GreyLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin20GreyLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin20GreyDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin20GreyDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin20Info(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin20Info(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin20InfoLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin20InfoLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin20InfoDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin20InfoDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin20Success(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin20Success(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin20SuccessLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin20SuccessLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin20SuccessDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin20SuccessDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin20Warning(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin20Warning(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin20WarningLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin20WarningLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin20WarningDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin20WarningDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin20Danger(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin20Danger(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin20DangerLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin20DangerLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin20DangerDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin20DangerDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin22White(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin22White(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin22WhiteAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin22WhiteAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin22Black(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin22Black(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin22BlackAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin22BlackAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin22Primary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin22Primary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin22PrimaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin22PrimaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin22PrimaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin22PrimaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin22PrimaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin22PrimaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin22Secondary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin22Secondary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin22SecondaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin22SecondaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin22SecondaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin22SecondaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin22SecondaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin22SecondaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin22Accent(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin22Accent(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin22AccentInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin22AccentInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin22AccentLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin22AccentLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin22AccentDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin22AccentDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin22Grey(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin22Grey(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin22GreyLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin22GreyLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin22GreyDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin22GreyDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin22Info(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin22Info(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin22InfoLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin22InfoLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin22InfoDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin22InfoDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin22Success(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin22Success(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin22SuccessLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin22SuccessLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin22SuccessDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin22SuccessDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin22Warning(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin22Warning(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin22WarningLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin22WarningLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin22WarningDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin22WarningDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin22Danger(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin22Danger(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin22DangerLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin22DangerLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin22DangerDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin22DangerDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin24White(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin24White(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin24WhiteAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin24WhiteAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin24Black(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin24Black(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin24BlackAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin24BlackAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin24Primary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin24Primary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin24PrimaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin24PrimaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin24PrimaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin24PrimaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin24PrimaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin24PrimaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin24Secondary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin24Secondary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin24SecondaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin24SecondaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin24SecondaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin24SecondaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin24SecondaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin24SecondaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin24Accent(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin24Accent(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin24AccentInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin24AccentInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin24AccentLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin24AccentLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin24AccentDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin24AccentDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin24Grey(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin24Grey(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin24GreyLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin24GreyLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin24GreyDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin24GreyDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin24Info(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin24Info(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin24InfoLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin24InfoLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin24InfoDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin24InfoDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin24Success(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin24Success(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin24SuccessLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin24SuccessLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin24SuccessDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin24SuccessDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin24Warning(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin24Warning(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin24WarningLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin24WarningLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin24WarningDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin24WarningDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin24Danger(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin24Danger(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin24DangerLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin24DangerLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin24DangerDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin24DangerDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin26White(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin26White(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin26WhiteAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin26WhiteAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin26Black(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin26Black(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin26BlackAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin26BlackAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin26Primary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin26Primary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin26PrimaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin26PrimaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin26PrimaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin26PrimaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin26PrimaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin26PrimaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin26Secondary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin26Secondary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin26SecondaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin26SecondaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin26SecondaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin26SecondaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin26SecondaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin26SecondaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin26Accent(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin26Accent(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin26AccentInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin26AccentInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin26AccentLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin26AccentLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin26AccentDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin26AccentDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin26Grey(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin26Grey(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin26GreyLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin26GreyLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin26GreyDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin26GreyDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin26Info(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin26Info(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin26InfoLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin26InfoLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin26InfoDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin26InfoDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin26Success(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin26Success(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin26SuccessLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin26SuccessLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin26SuccessDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin26SuccessDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin26Warning(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin26Warning(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin26WarningLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin26WarningLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin26WarningDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin26WarningDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin26Danger(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin26Danger(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin26DangerLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin26DangerLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin26DangerDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin26DangerDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin28White(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin28White(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin28WhiteAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin28WhiteAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin28Black(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin28Black(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin28BlackAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin28BlackAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin28Primary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin28Primary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin28PrimaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin28PrimaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin28PrimaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin28PrimaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin28PrimaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin28PrimaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin28Secondary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin28Secondary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin28SecondaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin28SecondaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin28SecondaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin28SecondaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin28SecondaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin28SecondaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin28Accent(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin28Accent(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin28AccentInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin28AccentInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin28AccentLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin28AccentLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin28AccentDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin28AccentDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin28Grey(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin28Grey(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin28GreyLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin28GreyLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin28GreyDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin28GreyDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin28Info(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin28Info(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin28InfoLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin28InfoLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin28InfoDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin28InfoDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin28Success(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin28Success(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin28SuccessLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin28SuccessLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin28SuccessDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin28SuccessDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin28Warning(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin28Warning(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin28WarningLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin28WarningLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin28WarningDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin28WarningDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin28Danger(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin28Danger(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin28DangerLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin28DangerLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin28DangerDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin28DangerDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin32White(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin32White(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin32WhiteAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin32WhiteAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin32Black(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin32Black(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin32BlackAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin32BlackAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin32Primary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin32Primary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin32PrimaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin32PrimaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin32PrimaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin32PrimaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin32PrimaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin32PrimaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin32Secondary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin32Secondary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin32SecondaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin32SecondaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin32SecondaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin32SecondaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin32SecondaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin32SecondaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin32Accent(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin32Accent(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin32AccentInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin32AccentInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin32AccentLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin32AccentLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin32AccentDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin32AccentDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin32Grey(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin32Grey(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin32GreyLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin32GreyLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin32GreyDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin32GreyDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin32Info(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin32Info(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin32InfoLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin32InfoLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin32InfoDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin32InfoDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin32Success(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin32Success(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin32SuccessLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin32SuccessLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin32SuccessDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin32SuccessDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin32Warning(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin32Warning(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin32WarningLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin32WarningLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin32WarningDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin32WarningDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin32Danger(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin32Danger(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin32DangerLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin32DangerLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan thin32DangerDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.thin32DangerDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light10White(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light10White(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light10WhiteAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light10WhiteAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light10Black(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light10Black(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light10BlackAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light10BlackAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light10Primary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light10Primary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light10PrimaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light10PrimaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light10PrimaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light10PrimaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light10PrimaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light10PrimaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light10Secondary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light10Secondary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light10SecondaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light10SecondaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light10SecondaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light10SecondaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light10SecondaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light10SecondaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light10Accent(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light10Accent(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light10AccentInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light10AccentInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light10AccentLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light10AccentLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light10AccentDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light10AccentDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light10Grey(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light10Grey(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light10GreyLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light10GreyLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light10GreyDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light10GreyDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light10Info(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light10Info(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light10InfoLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light10InfoLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light10InfoDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light10InfoDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light10Success(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light10Success(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light10SuccessLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light10SuccessLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light10SuccessDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light10SuccessDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light10Warning(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light10Warning(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light10WarningLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light10WarningLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light10WarningDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light10WarningDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light10Danger(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light10Danger(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light10DangerLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light10DangerLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light10DangerDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light10DangerDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light11White(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light11White(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light11WhiteAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light11WhiteAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light11Black(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light11Black(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light11BlackAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light11BlackAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light11Primary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light11Primary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light11PrimaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light11PrimaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light11PrimaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light11PrimaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light11PrimaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light11PrimaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light11Secondary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light11Secondary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light11SecondaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light11SecondaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light11SecondaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light11SecondaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light11SecondaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light11SecondaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light11Accent(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light11Accent(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light11AccentInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light11AccentInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light11AccentLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light11AccentLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light11AccentDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light11AccentDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light11Grey(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light11Grey(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light11GreyLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light11GreyLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light11GreyDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light11GreyDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light11Info(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light11Info(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light11InfoLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light11InfoLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light11InfoDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light11InfoDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light11Success(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light11Success(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light11SuccessLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light11SuccessLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light11SuccessDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light11SuccessDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light11Warning(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light11Warning(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light11WarningLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light11WarningLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light11WarningDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light11WarningDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light11Danger(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light11Danger(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light11DangerLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light11DangerLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light11DangerDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light11DangerDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light12White(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light12White(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light12WhiteAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light12WhiteAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light12Black(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light12Black(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light12BlackAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light12BlackAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light12Primary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light12Primary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light12PrimaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light12PrimaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light12PrimaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light12PrimaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light12PrimaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light12PrimaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light12Secondary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light12Secondary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light12SecondaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light12SecondaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light12SecondaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light12SecondaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light12SecondaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light12SecondaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light12Accent(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light12Accent(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light12AccentInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light12AccentInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light12AccentLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light12AccentLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light12AccentDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light12AccentDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light12Grey(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light12Grey(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light12GreyLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light12GreyLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light12GreyDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light12GreyDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light12Info(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light12Info(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light12InfoLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light12InfoLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light12InfoDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light12InfoDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light12Success(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light12Success(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light12SuccessLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light12SuccessLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light12SuccessDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light12SuccessDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light12Warning(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light12Warning(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light12WarningLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light12WarningLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light12WarningDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light12WarningDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light12Danger(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light12Danger(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light12DangerLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light12DangerLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light12DangerDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light12DangerDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light13White(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light13White(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light13WhiteAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light13WhiteAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light13Black(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light13Black(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light13BlackAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light13BlackAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light13Primary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light13Primary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light13PrimaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light13PrimaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light13PrimaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light13PrimaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light13PrimaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light13PrimaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light13Secondary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light13Secondary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light13SecondaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light13SecondaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light13SecondaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light13SecondaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light13SecondaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light13SecondaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light13Accent(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light13Accent(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light13AccentInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light13AccentInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light13AccentLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light13AccentLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light13AccentDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light13AccentDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light13Grey(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light13Grey(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light13GreyLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light13GreyLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light13GreyDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light13GreyDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light13Info(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light13Info(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light13InfoLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light13InfoLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light13InfoDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light13InfoDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light13Success(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light13Success(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light13SuccessLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light13SuccessLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light13SuccessDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light13SuccessDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light13Warning(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light13Warning(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light13WarningLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light13WarningLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light13WarningDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light13WarningDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light13Danger(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light13Danger(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light13DangerLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light13DangerLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light13DangerDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light13DangerDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light14White(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light14White(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light14WhiteAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light14WhiteAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light14Black(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light14Black(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light14BlackAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light14BlackAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light14Primary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light14Primary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light14PrimaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light14PrimaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light14PrimaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light14PrimaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light14PrimaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light14PrimaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light14Secondary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light14Secondary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light14SecondaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light14SecondaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light14SecondaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light14SecondaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light14SecondaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light14SecondaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light14Accent(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light14Accent(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light14AccentInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light14AccentInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light14AccentLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light14AccentLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light14AccentDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light14AccentDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light14Grey(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light14Grey(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light14GreyLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light14GreyLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light14GreyDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light14GreyDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light14Info(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light14Info(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light14InfoLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light14InfoLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light14InfoDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light14InfoDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light14Success(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light14Success(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light14SuccessLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light14SuccessLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light14SuccessDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light14SuccessDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light14Warning(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light14Warning(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light14WarningLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light14WarningLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light14WarningDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light14WarningDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light14Danger(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light14Danger(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light14DangerLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light14DangerLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light14DangerDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light14DangerDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light15White(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light15White(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light15WhiteAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light15WhiteAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light15Black(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light15Black(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light15BlackAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light15BlackAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light15Primary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light15Primary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light15PrimaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light15PrimaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light15PrimaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light15PrimaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light15PrimaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light15PrimaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light15Secondary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light15Secondary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light15SecondaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light15SecondaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light15SecondaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light15SecondaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light15SecondaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light15SecondaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light15Accent(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light15Accent(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light15AccentInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light15AccentInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light15AccentLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light15AccentLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light15AccentDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light15AccentDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light15Grey(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light15Grey(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light15GreyLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light15GreyLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light15GreyDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light15GreyDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light15Info(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light15Info(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light15InfoLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light15InfoLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light15InfoDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light15InfoDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light15Success(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light15Success(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light15SuccessLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light15SuccessLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light15SuccessDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light15SuccessDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light15Warning(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light15Warning(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light15WarningLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light15WarningLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light15WarningDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light15WarningDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light15Danger(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light15Danger(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light15DangerLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light15DangerLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light15DangerDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light15DangerDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light16White(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light16White(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light16WhiteAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light16WhiteAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light16Black(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light16Black(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light16BlackAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light16BlackAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light16Primary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light16Primary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light16PrimaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light16PrimaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light16PrimaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light16PrimaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light16PrimaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light16PrimaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light16Secondary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light16Secondary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light16SecondaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light16SecondaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light16SecondaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light16SecondaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light16SecondaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light16SecondaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light16Accent(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light16Accent(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light16AccentInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light16AccentInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light16AccentLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light16AccentLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light16AccentDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light16AccentDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light16Grey(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light16Grey(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light16GreyLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light16GreyLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light16GreyDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light16GreyDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light16Info(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light16Info(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light16InfoLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light16InfoLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light16InfoDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light16InfoDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light16Success(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light16Success(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light16SuccessLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light16SuccessLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light16SuccessDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light16SuccessDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light16Warning(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light16Warning(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light16WarningLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light16WarningLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light16WarningDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light16WarningDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light16Danger(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light16Danger(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light16DangerLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light16DangerLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light16DangerDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light16DangerDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light17White(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light17White(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light17WhiteAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light17WhiteAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light17Black(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light17Black(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light17BlackAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light17BlackAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light17Primary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light17Primary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light17PrimaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light17PrimaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light17PrimaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light17PrimaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light17PrimaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light17PrimaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light17Secondary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light17Secondary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light17SecondaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light17SecondaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light17SecondaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light17SecondaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light17SecondaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light17SecondaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light17Accent(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light17Accent(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light17AccentInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light17AccentInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light17AccentLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light17AccentLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light17AccentDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light17AccentDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light17Grey(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light17Grey(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light17GreyLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light17GreyLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light17GreyDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light17GreyDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light17Info(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light17Info(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light17InfoLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light17InfoLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light17InfoDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light17InfoDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light17Success(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light17Success(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light17SuccessLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light17SuccessLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light17SuccessDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light17SuccessDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light17Warning(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light17Warning(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light17WarningLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light17WarningLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light17WarningDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light17WarningDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light17Danger(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light17Danger(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light17DangerLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light17DangerLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light17DangerDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light17DangerDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light18White(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light18White(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light18WhiteAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light18WhiteAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light18Black(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light18Black(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light18BlackAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light18BlackAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light18Primary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light18Primary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light18PrimaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light18PrimaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light18PrimaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light18PrimaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light18PrimaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light18PrimaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light18Secondary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light18Secondary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light18SecondaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light18SecondaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light18SecondaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light18SecondaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light18SecondaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light18SecondaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light18Accent(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light18Accent(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light18AccentInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light18AccentInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light18AccentLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light18AccentLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light18AccentDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light18AccentDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light18Grey(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light18Grey(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light18GreyLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light18GreyLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light18GreyDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light18GreyDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light18Info(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light18Info(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light18InfoLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light18InfoLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light18InfoDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light18InfoDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light18Success(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light18Success(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light18SuccessLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light18SuccessLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light18SuccessDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light18SuccessDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light18Warning(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light18Warning(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light18WarningLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light18WarningLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light18WarningDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light18WarningDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light18Danger(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light18Danger(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light18DangerLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light18DangerLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light18DangerDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light18DangerDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light19White(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light19White(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light19WhiteAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light19WhiteAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light19Black(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light19Black(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light19BlackAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light19BlackAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light19Primary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light19Primary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light19PrimaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light19PrimaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light19PrimaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light19PrimaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light19PrimaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light19PrimaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light19Secondary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light19Secondary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light19SecondaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light19SecondaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light19SecondaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light19SecondaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light19SecondaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light19SecondaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light19Accent(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light19Accent(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light19AccentInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light19AccentInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light19AccentLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light19AccentLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light19AccentDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light19AccentDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light19Grey(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light19Grey(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light19GreyLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light19GreyLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light19GreyDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light19GreyDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light19Info(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light19Info(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light19InfoLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light19InfoLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light19InfoDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light19InfoDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light19Success(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light19Success(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light19SuccessLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light19SuccessLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light19SuccessDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light19SuccessDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light19Warning(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light19Warning(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light19WarningLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light19WarningLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light19WarningDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light19WarningDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light19Danger(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light19Danger(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light19DangerLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light19DangerLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light19DangerDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light19DangerDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light20White(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light20White(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light20WhiteAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light20WhiteAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light20Black(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light20Black(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light20BlackAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light20BlackAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light20Primary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light20Primary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light20PrimaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light20PrimaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light20PrimaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light20PrimaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light20PrimaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light20PrimaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light20Secondary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light20Secondary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light20SecondaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light20SecondaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light20SecondaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light20SecondaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light20SecondaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light20SecondaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light20Accent(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light20Accent(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light20AccentInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light20AccentInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light20AccentLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light20AccentLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light20AccentDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light20AccentDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light20Grey(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light20Grey(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light20GreyLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light20GreyLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light20GreyDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light20GreyDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light20Info(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light20Info(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light20InfoLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light20InfoLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light20InfoDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light20InfoDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light20Success(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light20Success(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light20SuccessLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light20SuccessLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light20SuccessDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light20SuccessDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light20Warning(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light20Warning(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light20WarningLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light20WarningLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light20WarningDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light20WarningDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light20Danger(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light20Danger(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light20DangerLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light20DangerLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light20DangerDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light20DangerDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light22White(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light22White(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light22WhiteAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light22WhiteAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light22Black(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light22Black(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light22BlackAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light22BlackAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light22Primary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light22Primary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light22PrimaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light22PrimaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light22PrimaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light22PrimaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light22PrimaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light22PrimaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light22Secondary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light22Secondary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light22SecondaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light22SecondaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light22SecondaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light22SecondaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light22SecondaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light22SecondaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light22Accent(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light22Accent(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light22AccentInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light22AccentInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light22AccentLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light22AccentLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light22AccentDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light22AccentDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light22Grey(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light22Grey(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light22GreyLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light22GreyLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light22GreyDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light22GreyDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light22Info(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light22Info(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light22InfoLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light22InfoLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light22InfoDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light22InfoDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light22Success(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light22Success(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light22SuccessLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light22SuccessLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light22SuccessDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light22SuccessDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light22Warning(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light22Warning(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light22WarningLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light22WarningLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light22WarningDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light22WarningDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light22Danger(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light22Danger(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light22DangerLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light22DangerLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light22DangerDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light22DangerDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light24White(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light24White(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light24WhiteAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light24WhiteAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light24Black(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light24Black(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light24BlackAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light24BlackAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light24Primary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light24Primary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light24PrimaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light24PrimaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light24PrimaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light24PrimaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light24PrimaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light24PrimaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light24Secondary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light24Secondary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light24SecondaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light24SecondaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light24SecondaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light24SecondaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light24SecondaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light24SecondaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light24Accent(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light24Accent(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light24AccentInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light24AccentInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light24AccentLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light24AccentLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light24AccentDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light24AccentDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light24Grey(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light24Grey(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light24GreyLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light24GreyLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light24GreyDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light24GreyDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light24Info(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light24Info(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light24InfoLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light24InfoLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light24InfoDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light24InfoDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light24Success(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light24Success(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light24SuccessLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light24SuccessLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light24SuccessDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light24SuccessDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light24Warning(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light24Warning(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light24WarningLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light24WarningLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light24WarningDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light24WarningDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light24Danger(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light24Danger(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light24DangerLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light24DangerLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light24DangerDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light24DangerDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light26White(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light26White(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light26WhiteAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light26WhiteAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light26Black(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light26Black(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light26BlackAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light26BlackAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light26Primary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light26Primary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light26PrimaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light26PrimaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light26PrimaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light26PrimaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light26PrimaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light26PrimaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light26Secondary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light26Secondary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light26SecondaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light26SecondaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light26SecondaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light26SecondaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light26SecondaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light26SecondaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light26Accent(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light26Accent(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light26AccentInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light26AccentInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light26AccentLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light26AccentLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light26AccentDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light26AccentDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light26Grey(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light26Grey(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light26GreyLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light26GreyLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light26GreyDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light26GreyDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light26Info(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light26Info(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light26InfoLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light26InfoLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light26InfoDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light26InfoDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light26Success(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light26Success(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light26SuccessLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light26SuccessLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light26SuccessDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light26SuccessDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light26Warning(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light26Warning(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light26WarningLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light26WarningLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light26WarningDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light26WarningDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light26Danger(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light26Danger(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light26DangerLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light26DangerLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light26DangerDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light26DangerDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light28White(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light28White(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light28WhiteAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light28WhiteAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light28Black(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light28Black(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light28BlackAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light28BlackAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light28Primary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light28Primary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light28PrimaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light28PrimaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light28PrimaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light28PrimaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light28PrimaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light28PrimaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light28Secondary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light28Secondary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light28SecondaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light28SecondaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light28SecondaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light28SecondaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light28SecondaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light28SecondaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light28Accent(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light28Accent(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light28AccentInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light28AccentInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light28AccentLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light28AccentLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light28AccentDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light28AccentDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light28Grey(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light28Grey(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light28GreyLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light28GreyLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light28GreyDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light28GreyDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light28Info(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light28Info(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light28InfoLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light28InfoLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light28InfoDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light28InfoDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light28Success(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light28Success(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light28SuccessLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light28SuccessLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light28SuccessDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light28SuccessDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light28Warning(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light28Warning(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light28WarningLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light28WarningLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light28WarningDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light28WarningDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light28Danger(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light28Danger(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light28DangerLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light28DangerLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light28DangerDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light28DangerDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light32White(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light32White(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light32WhiteAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light32WhiteAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light32Black(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light32Black(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light32BlackAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light32BlackAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light32Primary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light32Primary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light32PrimaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light32PrimaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light32PrimaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light32PrimaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light32PrimaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light32PrimaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light32Secondary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light32Secondary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light32SecondaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light32SecondaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light32SecondaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light32SecondaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light32SecondaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light32SecondaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light32Accent(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light32Accent(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light32AccentInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light32AccentInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light32AccentLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light32AccentLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light32AccentDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light32AccentDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light32Grey(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light32Grey(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light32GreyLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light32GreyLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light32GreyDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light32GreyDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light32Info(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light32Info(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light32InfoLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light32InfoLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light32InfoDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light32InfoDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light32Success(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light32Success(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light32SuccessLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light32SuccessLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light32SuccessDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light32SuccessDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light32Warning(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light32Warning(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light32WarningLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light32WarningLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light32WarningDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light32WarningDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light32Danger(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light32Danger(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light32DangerLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light32DangerLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan light32DangerDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.light32DangerDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular10White(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular10White(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular10WhiteAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular10WhiteAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular10Black(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular10Black(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular10BlackAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular10BlackAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular10Primary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular10Primary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular10PrimaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular10PrimaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular10PrimaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular10PrimaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular10PrimaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular10PrimaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular10Secondary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular10Secondary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular10SecondaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular10SecondaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular10SecondaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular10SecondaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular10SecondaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular10SecondaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular10Accent(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular10Accent(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular10AccentInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular10AccentInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular10AccentLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular10AccentLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular10AccentDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular10AccentDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular10Grey(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular10Grey(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular10GreyLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular10GreyLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular10GreyDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular10GreyDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular10Info(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular10Info(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular10InfoLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular10InfoLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular10InfoDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular10InfoDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular10Success(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular10Success(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular10SuccessLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular10SuccessLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular10SuccessDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular10SuccessDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular10Warning(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular10Warning(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular10WarningLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular10WarningLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular10WarningDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular10WarningDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular10Danger(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular10Danger(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular10DangerLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular10DangerLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular10DangerDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular10DangerDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular11White(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular11White(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular11WhiteAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular11WhiteAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular11Black(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular11Black(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular11BlackAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular11BlackAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular11Primary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular11Primary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular11PrimaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular11PrimaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular11PrimaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular11PrimaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular11PrimaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular11PrimaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular11Secondary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular11Secondary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular11SecondaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular11SecondaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular11SecondaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular11SecondaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular11SecondaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular11SecondaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular11Accent(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular11Accent(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular11AccentInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular11AccentInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular11AccentLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular11AccentLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular11AccentDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular11AccentDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular11Grey(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular11Grey(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular11GreyLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular11GreyLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular11GreyDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular11GreyDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular11Info(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular11Info(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular11InfoLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular11InfoLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular11InfoDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular11InfoDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular11Success(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular11Success(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular11SuccessLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular11SuccessLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular11SuccessDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular11SuccessDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular11Warning(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular11Warning(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular11WarningLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular11WarningLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular11WarningDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular11WarningDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular11Danger(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular11Danger(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular11DangerLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular11DangerLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular11DangerDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular11DangerDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular12White(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular12White(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular12WhiteAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular12WhiteAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular12Black(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular12Black(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular12BlackAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular12BlackAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular12Primary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular12Primary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular12PrimaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular12PrimaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular12PrimaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular12PrimaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular12PrimaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular12PrimaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular12Secondary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular12Secondary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular12SecondaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular12SecondaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular12SecondaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular12SecondaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular12SecondaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular12SecondaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular12Accent(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular12Accent(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular12AccentInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular12AccentInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular12AccentLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular12AccentLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular12AccentDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular12AccentDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular12Grey(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular12Grey(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular12GreyLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular12GreyLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular12GreyDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular12GreyDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular12Info(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular12Info(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular12InfoLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular12InfoLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular12InfoDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular12InfoDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular12Success(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular12Success(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular12SuccessLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular12SuccessLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular12SuccessDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular12SuccessDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular12Warning(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular12Warning(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular12WarningLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular12WarningLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular12WarningDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular12WarningDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular12Danger(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular12Danger(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular12DangerLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular12DangerLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular12DangerDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular12DangerDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular13White(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular13White(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular13WhiteAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular13WhiteAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular13Black(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular13Black(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular13BlackAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular13BlackAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular13Primary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular13Primary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular13PrimaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular13PrimaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular13PrimaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular13PrimaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular13PrimaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular13PrimaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular13Secondary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular13Secondary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular13SecondaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular13SecondaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular13SecondaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular13SecondaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular13SecondaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular13SecondaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular13Accent(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular13Accent(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular13AccentInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular13AccentInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular13AccentLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular13AccentLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular13AccentDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular13AccentDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular13Grey(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular13Grey(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular13GreyLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular13GreyLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular13GreyDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular13GreyDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular13Info(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular13Info(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular13InfoLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular13InfoLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular13InfoDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular13InfoDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular13Success(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular13Success(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular13SuccessLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular13SuccessLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular13SuccessDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular13SuccessDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular13Warning(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular13Warning(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular13WarningLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular13WarningLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular13WarningDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular13WarningDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular13Danger(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular13Danger(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular13DangerLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular13DangerLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular13DangerDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular13DangerDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular14White(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular14White(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular14WhiteAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular14WhiteAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular14Black(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular14Black(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular14BlackAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular14BlackAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular14Primary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular14Primary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular14PrimaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular14PrimaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular14PrimaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular14PrimaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular14PrimaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular14PrimaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular14Secondary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular14Secondary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular14SecondaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular14SecondaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular14SecondaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular14SecondaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular14SecondaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular14SecondaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular14Accent(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular14Accent(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular14AccentInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular14AccentInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular14AccentLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular14AccentLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular14AccentDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular14AccentDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular14Grey(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular14Grey(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular14GreyLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular14GreyLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular14GreyDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular14GreyDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular14Info(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular14Info(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular14InfoLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular14InfoLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular14InfoDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular14InfoDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular14Success(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular14Success(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular14SuccessLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular14SuccessLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular14SuccessDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular14SuccessDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular14Warning(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular14Warning(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular14WarningLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular14WarningLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular14WarningDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular14WarningDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular14Danger(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular14Danger(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular14DangerLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular14DangerLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular14DangerDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular14DangerDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular15White(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular15White(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular15WhiteAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular15WhiteAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular15Black(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular15Black(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular15BlackAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular15BlackAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular15Primary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular15Primary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular15PrimaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular15PrimaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular15PrimaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular15PrimaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular15PrimaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular15PrimaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular15Secondary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular15Secondary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular15SecondaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular15SecondaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular15SecondaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular15SecondaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular15SecondaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular15SecondaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular15Accent(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular15Accent(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular15AccentInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular15AccentInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular15AccentLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular15AccentLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular15AccentDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular15AccentDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular15Grey(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular15Grey(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular15GreyLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular15GreyLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular15GreyDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular15GreyDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular15Info(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular15Info(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular15InfoLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular15InfoLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular15InfoDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular15InfoDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular15Success(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular15Success(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular15SuccessLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular15SuccessLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular15SuccessDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular15SuccessDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular15Warning(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular15Warning(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular15WarningLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular15WarningLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular15WarningDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular15WarningDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular15Danger(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular15Danger(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular15DangerLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular15DangerLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular15DangerDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular15DangerDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular16White(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular16White(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular16WhiteAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular16WhiteAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular16Black(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular16Black(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular16BlackAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular16BlackAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular16Primary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular16Primary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular16PrimaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular16PrimaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular16PrimaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular16PrimaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular16PrimaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular16PrimaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular16Secondary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular16Secondary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular16SecondaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular16SecondaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular16SecondaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular16SecondaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular16SecondaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular16SecondaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular16Accent(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular16Accent(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular16AccentInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular16AccentInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular16AccentLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular16AccentLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular16AccentDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular16AccentDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular16Grey(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular16Grey(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular16GreyLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular16GreyLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular16GreyDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular16GreyDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular16Info(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular16Info(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular16InfoLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular16InfoLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular16InfoDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular16InfoDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular16Success(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular16Success(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular16SuccessLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular16SuccessLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular16SuccessDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular16SuccessDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular16Warning(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular16Warning(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular16WarningLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular16WarningLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular16WarningDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular16WarningDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular16Danger(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular16Danger(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular16DangerLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular16DangerLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular16DangerDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular16DangerDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular17White(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular17White(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular17WhiteAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular17WhiteAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular17Black(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular17Black(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular17BlackAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular17BlackAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular17Primary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular17Primary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular17PrimaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular17PrimaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular17PrimaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular17PrimaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular17PrimaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular17PrimaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular17Secondary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular17Secondary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular17SecondaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular17SecondaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular17SecondaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular17SecondaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular17SecondaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular17SecondaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular17Accent(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular17Accent(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular17AccentInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular17AccentInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular17AccentLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular17AccentLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular17AccentDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular17AccentDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular17Grey(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular17Grey(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular17GreyLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular17GreyLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular17GreyDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular17GreyDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular17Info(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular17Info(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular17InfoLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular17InfoLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular17InfoDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular17InfoDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular17Success(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular17Success(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular17SuccessLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular17SuccessLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular17SuccessDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular17SuccessDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular17Warning(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular17Warning(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular17WarningLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular17WarningLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular17WarningDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular17WarningDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular17Danger(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular17Danger(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular17DangerLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular17DangerLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular17DangerDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular17DangerDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular18White(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular18White(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular18WhiteAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular18WhiteAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular18Black(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular18Black(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular18BlackAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular18BlackAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular18Primary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular18Primary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular18PrimaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular18PrimaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular18PrimaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular18PrimaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular18PrimaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular18PrimaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular18Secondary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular18Secondary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular18SecondaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular18SecondaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular18SecondaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular18SecondaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular18SecondaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular18SecondaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular18Accent(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular18Accent(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular18AccentInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular18AccentInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular18AccentLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular18AccentLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular18AccentDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular18AccentDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular18Grey(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular18Grey(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular18GreyLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular18GreyLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular18GreyDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular18GreyDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular18Info(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular18Info(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular18InfoLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular18InfoLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular18InfoDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular18InfoDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular18Success(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular18Success(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular18SuccessLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular18SuccessLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular18SuccessDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular18SuccessDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular18Warning(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular18Warning(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular18WarningLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular18WarningLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular18WarningDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular18WarningDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular18Danger(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular18Danger(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular18DangerLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular18DangerLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular18DangerDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular18DangerDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular19White(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular19White(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular19WhiteAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular19WhiteAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular19Black(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular19Black(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular19BlackAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular19BlackAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular19Primary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular19Primary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular19PrimaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular19PrimaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular19PrimaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular19PrimaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular19PrimaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular19PrimaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular19Secondary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular19Secondary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular19SecondaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular19SecondaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular19SecondaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular19SecondaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular19SecondaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular19SecondaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular19Accent(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular19Accent(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular19AccentInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular19AccentInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular19AccentLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular19AccentLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular19AccentDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular19AccentDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular19Grey(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular19Grey(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular19GreyLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular19GreyLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular19GreyDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular19GreyDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular19Info(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular19Info(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular19InfoLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular19InfoLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular19InfoDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular19InfoDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular19Success(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular19Success(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular19SuccessLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular19SuccessLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular19SuccessDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular19SuccessDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular19Warning(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular19Warning(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular19WarningLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular19WarningLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular19WarningDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular19WarningDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular19Danger(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular19Danger(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular19DangerLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular19DangerLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular19DangerDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular19DangerDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular20White(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular20White(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular20WhiteAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular20WhiteAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular20Black(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular20Black(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular20BlackAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular20BlackAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular20Primary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular20Primary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular20PrimaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular20PrimaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular20PrimaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular20PrimaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular20PrimaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular20PrimaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular20Secondary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular20Secondary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular20SecondaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular20SecondaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular20SecondaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular20SecondaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular20SecondaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular20SecondaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular20Accent(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular20Accent(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular20AccentInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular20AccentInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular20AccentLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular20AccentLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular20AccentDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular20AccentDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular20Grey(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular20Grey(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular20GreyLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular20GreyLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular20GreyDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular20GreyDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular20Info(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular20Info(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular20InfoLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular20InfoLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular20InfoDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular20InfoDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular20Success(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular20Success(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular20SuccessLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular20SuccessLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular20SuccessDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular20SuccessDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular20Warning(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular20Warning(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular20WarningLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular20WarningLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular20WarningDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular20WarningDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular20Danger(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular20Danger(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular20DangerLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular20DangerLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular20DangerDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular20DangerDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular22White(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular22White(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular22WhiteAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular22WhiteAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular22Black(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular22Black(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular22BlackAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular22BlackAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular22Primary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular22Primary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular22PrimaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular22PrimaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular22PrimaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular22PrimaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular22PrimaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular22PrimaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular22Secondary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular22Secondary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular22SecondaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular22SecondaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular22SecondaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular22SecondaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular22SecondaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular22SecondaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular22Accent(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular22Accent(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular22AccentInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular22AccentInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular22AccentLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular22AccentLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular22AccentDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular22AccentDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular22Grey(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular22Grey(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular22GreyLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular22GreyLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular22GreyDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular22GreyDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular22Info(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular22Info(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular22InfoLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular22InfoLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular22InfoDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular22InfoDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular22Success(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular22Success(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular22SuccessLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular22SuccessLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular22SuccessDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular22SuccessDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular22Warning(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular22Warning(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular22WarningLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular22WarningLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular22WarningDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular22WarningDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular22Danger(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular22Danger(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular22DangerLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular22DangerLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular22DangerDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular22DangerDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular24White(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular24White(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular24WhiteAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular24WhiteAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular24Black(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular24Black(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular24BlackAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular24BlackAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular24Primary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular24Primary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular24PrimaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular24PrimaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular24PrimaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular24PrimaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular24PrimaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular24PrimaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular24Secondary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular24Secondary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular24SecondaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular24SecondaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular24SecondaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular24SecondaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular24SecondaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular24SecondaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular24Accent(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular24Accent(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular24AccentInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular24AccentInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular24AccentLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular24AccentLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular24AccentDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular24AccentDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular24Grey(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular24Grey(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular24GreyLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular24GreyLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular24GreyDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular24GreyDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular24Info(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular24Info(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular24InfoLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular24InfoLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular24InfoDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular24InfoDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular24Success(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular24Success(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular24SuccessLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular24SuccessLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular24SuccessDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular24SuccessDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular24Warning(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular24Warning(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular24WarningLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular24WarningLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular24WarningDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular24WarningDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular24Danger(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular24Danger(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular24DangerLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular24DangerLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular24DangerDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular24DangerDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular26White(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular26White(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular26WhiteAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular26WhiteAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular26Black(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular26Black(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular26BlackAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular26BlackAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular26Primary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular26Primary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular26PrimaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular26PrimaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular26PrimaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular26PrimaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular26PrimaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular26PrimaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular26Secondary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular26Secondary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular26SecondaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular26SecondaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular26SecondaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular26SecondaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular26SecondaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular26SecondaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular26Accent(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular26Accent(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular26AccentInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular26AccentInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular26AccentLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular26AccentLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular26AccentDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular26AccentDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular26Grey(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular26Grey(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular26GreyLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular26GreyLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular26GreyDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular26GreyDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular26Info(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular26Info(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular26InfoLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular26InfoLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular26InfoDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular26InfoDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular26Success(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular26Success(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular26SuccessLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular26SuccessLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular26SuccessDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular26SuccessDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular26Warning(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular26Warning(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular26WarningLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular26WarningLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular26WarningDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular26WarningDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular26Danger(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular26Danger(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular26DangerLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular26DangerLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular26DangerDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular26DangerDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular28White(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular28White(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular28WhiteAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular28WhiteAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular28Black(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular28Black(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular28BlackAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular28BlackAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular28Primary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular28Primary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular28PrimaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular28PrimaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular28PrimaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular28PrimaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular28PrimaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular28PrimaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular28Secondary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular28Secondary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular28SecondaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular28SecondaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular28SecondaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular28SecondaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular28SecondaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular28SecondaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular28Accent(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular28Accent(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular28AccentInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular28AccentInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular28AccentLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular28AccentLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular28AccentDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular28AccentDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular28Grey(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular28Grey(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular28GreyLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular28GreyLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular28GreyDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular28GreyDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular28Info(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular28Info(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular28InfoLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular28InfoLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular28InfoDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular28InfoDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular28Success(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular28Success(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular28SuccessLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular28SuccessLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular28SuccessDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular28SuccessDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular28Warning(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular28Warning(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular28WarningLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular28WarningLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular28WarningDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular28WarningDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular28Danger(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular28Danger(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular28DangerLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular28DangerLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular28DangerDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular28DangerDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular32White(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular32White(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular32WhiteAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular32WhiteAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular32Black(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular32Black(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular32BlackAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular32BlackAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular32Primary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular32Primary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular32PrimaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular32PrimaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular32PrimaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular32PrimaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular32PrimaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular32PrimaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular32Secondary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular32Secondary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular32SecondaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular32SecondaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular32SecondaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular32SecondaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular32SecondaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular32SecondaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular32Accent(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular32Accent(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular32AccentInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular32AccentInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular32AccentLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular32AccentLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular32AccentDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular32AccentDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular32Grey(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular32Grey(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular32GreyLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular32GreyLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular32GreyDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular32GreyDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular32Info(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular32Info(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular32InfoLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular32InfoLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular32InfoDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular32InfoDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular32Success(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular32Success(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular32SuccessLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular32SuccessLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular32SuccessDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular32SuccessDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular32Warning(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular32Warning(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular32WarningLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular32WarningLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular32WarningDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular32WarningDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular32Danger(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular32Danger(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular32DangerLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular32DangerLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan regular32DangerDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.regular32DangerDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium10White(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium10White(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium10WhiteAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium10WhiteAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium10Black(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium10Black(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium10BlackAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium10BlackAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium10Primary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium10Primary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium10PrimaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium10PrimaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium10PrimaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium10PrimaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium10PrimaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium10PrimaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium10Secondary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium10Secondary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium10SecondaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium10SecondaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium10SecondaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium10SecondaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium10SecondaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium10SecondaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium10Accent(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium10Accent(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium10AccentInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium10AccentInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium10AccentLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium10AccentLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium10AccentDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium10AccentDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium10Grey(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium10Grey(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium10GreyLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium10GreyLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium10GreyDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium10GreyDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium10Info(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium10Info(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium10InfoLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium10InfoLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium10InfoDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium10InfoDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium10Success(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium10Success(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium10SuccessLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium10SuccessLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium10SuccessDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium10SuccessDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium10Warning(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium10Warning(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium10WarningLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium10WarningLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium10WarningDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium10WarningDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium10Danger(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium10Danger(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium10DangerLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium10DangerLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium10DangerDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium10DangerDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium11White(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium11White(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium11WhiteAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium11WhiteAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium11Black(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium11Black(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium11BlackAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium11BlackAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium11Primary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium11Primary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium11PrimaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium11PrimaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium11PrimaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium11PrimaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium11PrimaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium11PrimaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium11Secondary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium11Secondary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium11SecondaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium11SecondaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium11SecondaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium11SecondaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium11SecondaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium11SecondaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium11Accent(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium11Accent(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium11AccentInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium11AccentInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium11AccentLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium11AccentLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium11AccentDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium11AccentDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium11Grey(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium11Grey(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium11GreyLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium11GreyLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium11GreyDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium11GreyDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium11Info(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium11Info(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium11InfoLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium11InfoLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium11InfoDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium11InfoDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium11Success(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium11Success(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium11SuccessLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium11SuccessLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium11SuccessDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium11SuccessDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium11Warning(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium11Warning(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium11WarningLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium11WarningLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium11WarningDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium11WarningDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium11Danger(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium11Danger(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium11DangerLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium11DangerLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium11DangerDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium11DangerDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium12White(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium12White(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium12WhiteAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium12WhiteAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium12Black(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium12Black(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium12BlackAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium12BlackAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium12Primary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium12Primary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium12PrimaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium12PrimaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium12PrimaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium12PrimaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium12PrimaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium12PrimaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium12Secondary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium12Secondary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium12SecondaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium12SecondaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium12SecondaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium12SecondaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium12SecondaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium12SecondaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium12Accent(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium12Accent(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium12AccentInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium12AccentInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium12AccentLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium12AccentLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium12AccentDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium12AccentDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium12Grey(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium12Grey(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium12GreyLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium12GreyLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium12GreyDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium12GreyDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium12Info(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium12Info(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium12InfoLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium12InfoLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium12InfoDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium12InfoDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium12Success(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium12Success(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium12SuccessLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium12SuccessLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium12SuccessDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium12SuccessDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium12Warning(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium12Warning(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium12WarningLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium12WarningLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium12WarningDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium12WarningDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium12Danger(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium12Danger(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium12DangerLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium12DangerLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium12DangerDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium12DangerDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium13White(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium13White(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium13WhiteAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium13WhiteAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium13Black(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium13Black(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium13BlackAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium13BlackAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium13Primary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium13Primary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium13PrimaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium13PrimaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium13PrimaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium13PrimaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium13PrimaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium13PrimaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium13Secondary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium13Secondary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium13SecondaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium13SecondaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium13SecondaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium13SecondaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium13SecondaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium13SecondaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium13Accent(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium13Accent(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium13AccentInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium13AccentInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium13AccentLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium13AccentLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium13AccentDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium13AccentDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium13Grey(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium13Grey(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium13GreyLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium13GreyLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium13GreyDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium13GreyDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium13Info(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium13Info(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium13InfoLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium13InfoLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium13InfoDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium13InfoDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium13Success(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium13Success(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium13SuccessLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium13SuccessLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium13SuccessDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium13SuccessDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium13Warning(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium13Warning(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium13WarningLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium13WarningLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium13WarningDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium13WarningDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium13Danger(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium13Danger(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium13DangerLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium13DangerLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium13DangerDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium13DangerDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium14White(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium14White(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium14WhiteAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium14WhiteAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium14Black(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium14Black(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium14BlackAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium14BlackAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium14Primary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium14Primary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium14PrimaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium14PrimaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium14PrimaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium14PrimaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium14PrimaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium14PrimaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium14Secondary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium14Secondary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium14SecondaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium14SecondaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium14SecondaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium14SecondaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium14SecondaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium14SecondaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium14Accent(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium14Accent(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium14AccentInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium14AccentInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium14AccentLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium14AccentLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium14AccentDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium14AccentDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium14Grey(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium14Grey(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium14GreyLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium14GreyLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium14GreyDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium14GreyDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium14Info(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium14Info(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium14InfoLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium14InfoLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium14InfoDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium14InfoDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium14Success(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium14Success(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium14SuccessLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium14SuccessLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium14SuccessDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium14SuccessDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium14Warning(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium14Warning(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium14WarningLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium14WarningLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium14WarningDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium14WarningDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium14Danger(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium14Danger(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium14DangerLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium14DangerLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium14DangerDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium14DangerDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium15White(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium15White(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium15WhiteAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium15WhiteAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium15Black(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium15Black(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium15BlackAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium15BlackAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium15Primary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium15Primary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium15PrimaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium15PrimaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium15PrimaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium15PrimaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium15PrimaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium15PrimaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium15Secondary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium15Secondary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium15SecondaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium15SecondaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium15SecondaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium15SecondaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium15SecondaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium15SecondaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium15Accent(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium15Accent(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium15AccentInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium15AccentInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium15AccentLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium15AccentLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium15AccentDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium15AccentDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium15Grey(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium15Grey(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium15GreyLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium15GreyLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium15GreyDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium15GreyDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium15Info(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium15Info(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium15InfoLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium15InfoLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium15InfoDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium15InfoDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium15Success(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium15Success(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium15SuccessLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium15SuccessLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium15SuccessDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium15SuccessDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium15Warning(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium15Warning(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium15WarningLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium15WarningLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium15WarningDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium15WarningDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium15Danger(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium15Danger(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium15DangerLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium15DangerLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium15DangerDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium15DangerDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium16White(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium16White(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium16WhiteAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium16WhiteAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium16Black(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium16Black(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium16BlackAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium16BlackAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium16Primary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium16Primary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium16PrimaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium16PrimaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium16PrimaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium16PrimaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium16PrimaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium16PrimaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium16Secondary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium16Secondary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium16SecondaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium16SecondaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium16SecondaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium16SecondaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium16SecondaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium16SecondaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium16Accent(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium16Accent(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium16AccentInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium16AccentInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium16AccentLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium16AccentLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium16AccentDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium16AccentDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium16Grey(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium16Grey(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium16GreyLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium16GreyLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium16GreyDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium16GreyDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium16Info(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium16Info(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium16InfoLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium16InfoLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium16InfoDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium16InfoDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium16Success(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium16Success(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium16SuccessLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium16SuccessLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium16SuccessDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium16SuccessDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium16Warning(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium16Warning(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium16WarningLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium16WarningLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium16WarningDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium16WarningDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium16Danger(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium16Danger(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium16DangerLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium16DangerLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium16DangerDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium16DangerDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium17White(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium17White(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium17WhiteAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium17WhiteAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium17Black(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium17Black(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium17BlackAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium17BlackAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium17Primary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium17Primary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium17PrimaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium17PrimaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium17PrimaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium17PrimaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium17PrimaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium17PrimaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium17Secondary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium17Secondary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium17SecondaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium17SecondaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium17SecondaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium17SecondaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium17SecondaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium17SecondaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium17Accent(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium17Accent(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium17AccentInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium17AccentInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium17AccentLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium17AccentLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium17AccentDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium17AccentDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium17Grey(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium17Grey(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium17GreyLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium17GreyLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium17GreyDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium17GreyDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium17Info(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium17Info(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium17InfoLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium17InfoLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium17InfoDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium17InfoDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium17Success(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium17Success(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium17SuccessLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium17SuccessLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium17SuccessDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium17SuccessDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium17Warning(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium17Warning(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium17WarningLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium17WarningLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium17WarningDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium17WarningDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium17Danger(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium17Danger(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium17DangerLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium17DangerLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium17DangerDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium17DangerDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium18White(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium18White(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium18WhiteAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium18WhiteAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium18Black(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium18Black(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium18BlackAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium18BlackAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium18Primary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium18Primary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium18PrimaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium18PrimaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium18PrimaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium18PrimaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium18PrimaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium18PrimaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium18Secondary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium18Secondary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium18SecondaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium18SecondaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium18SecondaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium18SecondaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium18SecondaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium18SecondaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium18Accent(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium18Accent(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium18AccentInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium18AccentInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium18AccentLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium18AccentLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium18AccentDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium18AccentDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium18Grey(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium18Grey(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium18GreyLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium18GreyLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium18GreyDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium18GreyDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium18Info(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium18Info(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium18InfoLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium18InfoLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium18InfoDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium18InfoDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium18Success(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium18Success(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium18SuccessLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium18SuccessLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium18SuccessDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium18SuccessDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium18Warning(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium18Warning(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium18WarningLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium18WarningLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium18WarningDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium18WarningDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium18Danger(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium18Danger(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium18DangerLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium18DangerLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium18DangerDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium18DangerDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium19White(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium19White(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium19WhiteAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium19WhiteAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium19Black(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium19Black(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium19BlackAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium19BlackAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium19Primary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium19Primary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium19PrimaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium19PrimaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium19PrimaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium19PrimaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium19PrimaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium19PrimaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium19Secondary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium19Secondary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium19SecondaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium19SecondaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium19SecondaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium19SecondaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium19SecondaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium19SecondaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium19Accent(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium19Accent(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium19AccentInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium19AccentInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium19AccentLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium19AccentLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium19AccentDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium19AccentDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium19Grey(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium19Grey(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium19GreyLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium19GreyLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium19GreyDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium19GreyDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium19Info(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium19Info(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium19InfoLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium19InfoLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium19InfoDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium19InfoDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium19Success(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium19Success(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium19SuccessLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium19SuccessLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium19SuccessDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium19SuccessDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium19Warning(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium19Warning(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium19WarningLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium19WarningLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium19WarningDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium19WarningDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium19Danger(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium19Danger(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium19DangerLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium19DangerLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium19DangerDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium19DangerDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium20White(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium20White(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium20WhiteAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium20WhiteAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium20Black(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium20Black(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium20BlackAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium20BlackAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium20Primary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium20Primary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium20PrimaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium20PrimaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium20PrimaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium20PrimaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium20PrimaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium20PrimaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium20Secondary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium20Secondary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium20SecondaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium20SecondaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium20SecondaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium20SecondaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium20SecondaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium20SecondaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium20Accent(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium20Accent(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium20AccentInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium20AccentInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium20AccentLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium20AccentLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium20AccentDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium20AccentDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium20Grey(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium20Grey(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium20GreyLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium20GreyLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium20GreyDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium20GreyDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium20Info(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium20Info(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium20InfoLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium20InfoLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium20InfoDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium20InfoDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium20Success(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium20Success(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium20SuccessLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium20SuccessLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium20SuccessDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium20SuccessDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium20Warning(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium20Warning(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium20WarningLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium20WarningLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium20WarningDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium20WarningDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium20Danger(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium20Danger(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium20DangerLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium20DangerLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium20DangerDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium20DangerDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium22White(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium22White(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium22WhiteAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium22WhiteAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium22Black(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium22Black(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium22BlackAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium22BlackAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium22Primary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium22Primary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium22PrimaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium22PrimaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium22PrimaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium22PrimaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium22PrimaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium22PrimaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium22Secondary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium22Secondary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium22SecondaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium22SecondaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium22SecondaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium22SecondaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium22SecondaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium22SecondaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium22Accent(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium22Accent(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium22AccentInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium22AccentInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium22AccentLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium22AccentLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium22AccentDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium22AccentDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium22Grey(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium22Grey(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium22GreyLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium22GreyLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium22GreyDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium22GreyDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium22Info(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium22Info(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium22InfoLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium22InfoLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium22InfoDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium22InfoDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium22Success(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium22Success(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium22SuccessLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium22SuccessLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium22SuccessDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium22SuccessDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium22Warning(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium22Warning(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium22WarningLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium22WarningLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium22WarningDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium22WarningDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium22Danger(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium22Danger(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium22DangerLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium22DangerLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium22DangerDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium22DangerDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium24White(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium24White(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium24WhiteAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium24WhiteAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium24Black(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium24Black(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium24BlackAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium24BlackAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium24Primary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium24Primary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium24PrimaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium24PrimaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium24PrimaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium24PrimaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium24PrimaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium24PrimaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium24Secondary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium24Secondary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium24SecondaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium24SecondaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium24SecondaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium24SecondaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium24SecondaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium24SecondaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium24Accent(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium24Accent(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium24AccentInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium24AccentInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium24AccentLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium24AccentLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium24AccentDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium24AccentDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium24Grey(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium24Grey(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium24GreyLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium24GreyLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium24GreyDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium24GreyDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium24Info(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium24Info(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium24InfoLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium24InfoLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium24InfoDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium24InfoDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium24Success(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium24Success(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium24SuccessLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium24SuccessLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium24SuccessDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium24SuccessDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium24Warning(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium24Warning(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium24WarningLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium24WarningLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium24WarningDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium24WarningDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium24Danger(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium24Danger(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium24DangerLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium24DangerLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium24DangerDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium24DangerDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium26White(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium26White(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium26WhiteAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium26WhiteAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium26Black(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium26Black(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium26BlackAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium26BlackAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium26Primary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium26Primary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium26PrimaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium26PrimaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium26PrimaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium26PrimaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium26PrimaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium26PrimaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium26Secondary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium26Secondary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium26SecondaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium26SecondaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium26SecondaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium26SecondaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium26SecondaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium26SecondaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium26Accent(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium26Accent(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium26AccentInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium26AccentInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium26AccentLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium26AccentLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium26AccentDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium26AccentDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium26Grey(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium26Grey(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium26GreyLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium26GreyLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium26GreyDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium26GreyDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium26Info(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium26Info(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium26InfoLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium26InfoLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium26InfoDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium26InfoDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium26Success(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium26Success(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium26SuccessLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium26SuccessLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium26SuccessDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium26SuccessDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium26Warning(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium26Warning(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium26WarningLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium26WarningLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium26WarningDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium26WarningDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium26Danger(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium26Danger(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium26DangerLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium26DangerLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium26DangerDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium26DangerDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium28White(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium28White(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium28WhiteAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium28WhiteAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium28Black(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium28Black(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium28BlackAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium28BlackAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium28Primary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium28Primary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium28PrimaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium28PrimaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium28PrimaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium28PrimaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium28PrimaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium28PrimaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium28Secondary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium28Secondary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium28SecondaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium28SecondaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium28SecondaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium28SecondaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium28SecondaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium28SecondaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium28Accent(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium28Accent(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium28AccentInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium28AccentInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium28AccentLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium28AccentLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium28AccentDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium28AccentDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium28Grey(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium28Grey(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium28GreyLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium28GreyLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium28GreyDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium28GreyDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium28Info(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium28Info(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium28InfoLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium28InfoLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium28InfoDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium28InfoDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium28Success(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium28Success(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium28SuccessLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium28SuccessLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium28SuccessDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium28SuccessDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium28Warning(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium28Warning(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium28WarningLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium28WarningLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium28WarningDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium28WarningDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium28Danger(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium28Danger(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium28DangerLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium28DangerLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium28DangerDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium28DangerDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium32White(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium32White(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium32WhiteAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium32WhiteAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium32Black(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium32Black(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium32BlackAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium32BlackAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium32Primary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium32Primary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium32PrimaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium32PrimaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium32PrimaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium32PrimaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium32PrimaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium32PrimaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium32Secondary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium32Secondary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium32SecondaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium32SecondaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium32SecondaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium32SecondaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium32SecondaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium32SecondaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium32Accent(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium32Accent(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium32AccentInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium32AccentInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium32AccentLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium32AccentLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium32AccentDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium32AccentDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium32Grey(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium32Grey(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium32GreyLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium32GreyLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium32GreyDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium32GreyDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium32Info(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium32Info(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium32InfoLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium32InfoLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium32InfoDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium32InfoDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium32Success(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium32Success(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium32SuccessLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium32SuccessLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium32SuccessDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium32SuccessDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium32Warning(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium32Warning(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium32WarningLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium32WarningLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium32WarningDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium32WarningDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium32Danger(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium32Danger(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium32DangerLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium32DangerLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan medium32DangerDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.medium32DangerDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold10White(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold10White(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold10WhiteAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold10WhiteAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold10Black(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold10Black(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold10BlackAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold10BlackAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold10Primary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold10Primary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold10PrimaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold10PrimaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold10PrimaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold10PrimaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold10PrimaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold10PrimaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold10Secondary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold10Secondary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold10SecondaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold10SecondaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold10SecondaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold10SecondaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold10SecondaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold10SecondaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold10Accent(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold10Accent(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold10AccentInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold10AccentInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold10AccentLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold10AccentLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold10AccentDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold10AccentDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold10Grey(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold10Grey(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold10GreyLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold10GreyLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold10GreyDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold10GreyDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold10Info(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold10Info(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold10InfoLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold10InfoLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold10InfoDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold10InfoDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold10Success(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold10Success(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold10SuccessLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold10SuccessLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold10SuccessDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold10SuccessDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold10Warning(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold10Warning(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold10WarningLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold10WarningLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold10WarningDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold10WarningDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold10Danger(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold10Danger(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold10DangerLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold10DangerLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold10DangerDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold10DangerDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold11White(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold11White(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold11WhiteAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold11WhiteAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold11Black(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold11Black(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold11BlackAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold11BlackAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold11Primary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold11Primary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold11PrimaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold11PrimaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold11PrimaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold11PrimaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold11PrimaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold11PrimaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold11Secondary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold11Secondary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold11SecondaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold11SecondaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold11SecondaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold11SecondaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold11SecondaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold11SecondaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold11Accent(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold11Accent(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold11AccentInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold11AccentInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold11AccentLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold11AccentLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold11AccentDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold11AccentDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold11Grey(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold11Grey(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold11GreyLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold11GreyLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold11GreyDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold11GreyDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold11Info(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold11Info(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold11InfoLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold11InfoLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold11InfoDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold11InfoDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold11Success(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold11Success(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold11SuccessLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold11SuccessLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold11SuccessDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold11SuccessDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold11Warning(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold11Warning(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold11WarningLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold11WarningLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold11WarningDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold11WarningDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold11Danger(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold11Danger(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold11DangerLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold11DangerLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold11DangerDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold11DangerDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold12White(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold12White(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold12WhiteAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold12WhiteAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold12Black(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold12Black(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold12BlackAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold12BlackAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold12Primary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold12Primary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold12PrimaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold12PrimaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold12PrimaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold12PrimaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold12PrimaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold12PrimaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold12Secondary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold12Secondary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold12SecondaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold12SecondaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold12SecondaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold12SecondaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold12SecondaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold12SecondaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold12Accent(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold12Accent(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold12AccentInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold12AccentInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold12AccentLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold12AccentLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold12AccentDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold12AccentDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold12Grey(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold12Grey(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold12GreyLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold12GreyLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold12GreyDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold12GreyDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold12Info(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold12Info(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold12InfoLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold12InfoLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold12InfoDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold12InfoDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold12Success(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold12Success(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold12SuccessLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold12SuccessLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold12SuccessDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold12SuccessDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold12Warning(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold12Warning(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold12WarningLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold12WarningLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold12WarningDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold12WarningDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold12Danger(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold12Danger(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold12DangerLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold12DangerLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold12DangerDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold12DangerDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold13White(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold13White(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold13WhiteAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold13WhiteAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold13Black(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold13Black(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold13BlackAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold13BlackAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold13Primary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold13Primary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold13PrimaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold13PrimaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold13PrimaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold13PrimaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold13PrimaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold13PrimaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold13Secondary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold13Secondary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold13SecondaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold13SecondaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold13SecondaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold13SecondaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold13SecondaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold13SecondaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold13Accent(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold13Accent(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold13AccentInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold13AccentInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold13AccentLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold13AccentLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold13AccentDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold13AccentDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold13Grey(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold13Grey(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold13GreyLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold13GreyLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold13GreyDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold13GreyDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold13Info(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold13Info(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold13InfoLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold13InfoLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold13InfoDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold13InfoDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold13Success(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold13Success(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold13SuccessLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold13SuccessLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold13SuccessDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold13SuccessDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold13Warning(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold13Warning(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold13WarningLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold13WarningLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold13WarningDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold13WarningDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold13Danger(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold13Danger(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold13DangerLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold13DangerLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold13DangerDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold13DangerDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold14White(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold14White(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold14WhiteAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold14WhiteAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold14Black(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold14Black(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold14BlackAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold14BlackAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold14Primary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold14Primary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold14PrimaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold14PrimaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold14PrimaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold14PrimaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold14PrimaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold14PrimaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold14Secondary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold14Secondary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold14SecondaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold14SecondaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold14SecondaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold14SecondaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold14SecondaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold14SecondaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold14Accent(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold14Accent(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold14AccentInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold14AccentInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold14AccentLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold14AccentLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold14AccentDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold14AccentDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold14Grey(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold14Grey(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold14GreyLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold14GreyLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold14GreyDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold14GreyDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold14Info(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold14Info(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold14InfoLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold14InfoLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold14InfoDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold14InfoDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold14Success(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold14Success(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold14SuccessLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold14SuccessLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold14SuccessDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold14SuccessDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold14Warning(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold14Warning(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold14WarningLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold14WarningLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold14WarningDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold14WarningDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold14Danger(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold14Danger(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold14DangerLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold14DangerLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold14DangerDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold14DangerDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold15White(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold15White(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold15WhiteAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold15WhiteAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold15Black(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold15Black(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold15BlackAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold15BlackAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold15Primary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold15Primary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold15PrimaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold15PrimaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold15PrimaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold15PrimaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold15PrimaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold15PrimaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold15Secondary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold15Secondary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold15SecondaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold15SecondaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold15SecondaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold15SecondaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold15SecondaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold15SecondaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold15Accent(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold15Accent(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold15AccentInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold15AccentInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold15AccentLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold15AccentLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold15AccentDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold15AccentDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold15Grey(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold15Grey(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold15GreyLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold15GreyLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold15GreyDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold15GreyDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold15Info(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold15Info(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold15InfoLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold15InfoLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold15InfoDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold15InfoDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold15Success(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold15Success(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold15SuccessLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold15SuccessLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold15SuccessDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold15SuccessDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold15Warning(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold15Warning(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold15WarningLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold15WarningLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold15WarningDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold15WarningDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold15Danger(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold15Danger(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold15DangerLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold15DangerLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold15DangerDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold15DangerDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold16White(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold16White(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold16WhiteAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold16WhiteAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold16Black(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold16Black(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold16BlackAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold16BlackAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold16Primary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold16Primary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold16PrimaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold16PrimaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold16PrimaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold16PrimaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold16PrimaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold16PrimaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold16Secondary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold16Secondary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold16SecondaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold16SecondaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold16SecondaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold16SecondaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold16SecondaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold16SecondaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold16Accent(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold16Accent(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold16AccentInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold16AccentInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold16AccentLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold16AccentLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold16AccentDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold16AccentDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold16Grey(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold16Grey(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold16GreyLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold16GreyLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold16GreyDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold16GreyDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold16Info(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold16Info(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold16InfoLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold16InfoLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold16InfoDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold16InfoDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold16Success(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold16Success(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold16SuccessLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold16SuccessLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold16SuccessDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold16SuccessDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold16Warning(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold16Warning(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold16WarningLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold16WarningLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold16WarningDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold16WarningDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold16Danger(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold16Danger(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold16DangerLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold16DangerLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold16DangerDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold16DangerDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold17White(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold17White(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold17WhiteAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold17WhiteAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold17Black(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold17Black(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold17BlackAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold17BlackAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold17Primary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold17Primary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold17PrimaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold17PrimaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold17PrimaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold17PrimaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold17PrimaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold17PrimaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold17Secondary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold17Secondary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold17SecondaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold17SecondaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold17SecondaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold17SecondaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold17SecondaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold17SecondaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold17Accent(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold17Accent(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold17AccentInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold17AccentInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold17AccentLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold17AccentLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold17AccentDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold17AccentDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold17Grey(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold17Grey(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold17GreyLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold17GreyLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold17GreyDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold17GreyDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold17Info(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold17Info(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold17InfoLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold17InfoLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold17InfoDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold17InfoDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold17Success(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold17Success(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold17SuccessLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold17SuccessLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold17SuccessDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold17SuccessDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold17Warning(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold17Warning(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold17WarningLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold17WarningLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold17WarningDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold17WarningDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold17Danger(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold17Danger(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold17DangerLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold17DangerLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold17DangerDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold17DangerDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold18White(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold18White(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold18WhiteAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold18WhiteAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold18Black(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold18Black(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold18BlackAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold18BlackAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold18Primary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold18Primary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold18PrimaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold18PrimaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold18PrimaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold18PrimaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold18PrimaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold18PrimaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold18Secondary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold18Secondary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold18SecondaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold18SecondaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold18SecondaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold18SecondaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold18SecondaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold18SecondaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold18Accent(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold18Accent(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold18AccentInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold18AccentInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold18AccentLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold18AccentLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold18AccentDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold18AccentDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold18Grey(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold18Grey(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold18GreyLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold18GreyLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold18GreyDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold18GreyDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold18Info(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold18Info(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold18InfoLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold18InfoLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold18InfoDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold18InfoDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold18Success(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold18Success(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold18SuccessLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold18SuccessLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold18SuccessDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold18SuccessDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold18Warning(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold18Warning(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold18WarningLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold18WarningLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold18WarningDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold18WarningDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold18Danger(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold18Danger(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold18DangerLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold18DangerLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold18DangerDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold18DangerDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold19White(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold19White(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold19WhiteAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold19WhiteAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold19Black(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold19Black(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold19BlackAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold19BlackAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold19Primary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold19Primary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold19PrimaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold19PrimaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold19PrimaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold19PrimaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold19PrimaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold19PrimaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold19Secondary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold19Secondary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold19SecondaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold19SecondaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold19SecondaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold19SecondaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold19SecondaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold19SecondaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold19Accent(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold19Accent(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold19AccentInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold19AccentInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold19AccentLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold19AccentLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold19AccentDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold19AccentDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold19Grey(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold19Grey(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold19GreyLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold19GreyLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold19GreyDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold19GreyDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold19Info(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold19Info(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold19InfoLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold19InfoLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold19InfoDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold19InfoDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold19Success(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold19Success(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold19SuccessLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold19SuccessLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold19SuccessDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold19SuccessDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold19Warning(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold19Warning(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold19WarningLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold19WarningLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold19WarningDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold19WarningDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold19Danger(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold19Danger(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold19DangerLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold19DangerLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold19DangerDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold19DangerDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold20White(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold20White(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold20WhiteAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold20WhiteAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold20Black(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold20Black(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold20BlackAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold20BlackAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold20Primary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold20Primary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold20PrimaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold20PrimaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold20PrimaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold20PrimaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold20PrimaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold20PrimaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold20Secondary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold20Secondary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold20SecondaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold20SecondaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold20SecondaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold20SecondaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold20SecondaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold20SecondaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold20Accent(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold20Accent(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold20AccentInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold20AccentInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold20AccentLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold20AccentLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold20AccentDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold20AccentDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold20Grey(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold20Grey(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold20GreyLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold20GreyLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold20GreyDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold20GreyDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold20Info(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold20Info(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold20InfoLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold20InfoLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold20InfoDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold20InfoDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold20Success(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold20Success(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold20SuccessLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold20SuccessLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold20SuccessDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold20SuccessDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold20Warning(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold20Warning(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold20WarningLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold20WarningLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold20WarningDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold20WarningDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold20Danger(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold20Danger(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold20DangerLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold20DangerLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold20DangerDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold20DangerDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold22White(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold22White(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold22WhiteAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold22WhiteAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold22Black(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold22Black(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold22BlackAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold22BlackAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold22Primary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold22Primary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold22PrimaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold22PrimaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold22PrimaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold22PrimaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold22PrimaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold22PrimaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold22Secondary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold22Secondary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold22SecondaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold22SecondaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold22SecondaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold22SecondaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold22SecondaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold22SecondaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold22Accent(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold22Accent(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold22AccentInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold22AccentInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold22AccentLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold22AccentLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold22AccentDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold22AccentDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold22Grey(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold22Grey(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold22GreyLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold22GreyLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold22GreyDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold22GreyDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold22Info(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold22Info(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold22InfoLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold22InfoLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold22InfoDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold22InfoDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold22Success(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold22Success(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold22SuccessLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold22SuccessLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold22SuccessDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold22SuccessDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold22Warning(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold22Warning(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold22WarningLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold22WarningLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold22WarningDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold22WarningDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold22Danger(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold22Danger(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold22DangerLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold22DangerLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold22DangerDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold22DangerDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold24White(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold24White(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold24WhiteAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold24WhiteAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold24Black(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold24Black(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold24BlackAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold24BlackAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold24Primary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold24Primary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold24PrimaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold24PrimaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold24PrimaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold24PrimaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold24PrimaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold24PrimaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold24Secondary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold24Secondary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold24SecondaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold24SecondaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold24SecondaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold24SecondaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold24SecondaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold24SecondaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold24Accent(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold24Accent(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold24AccentInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold24AccentInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold24AccentLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold24AccentLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold24AccentDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold24AccentDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold24Grey(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold24Grey(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold24GreyLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold24GreyLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold24GreyDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold24GreyDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold24Info(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold24Info(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold24InfoLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold24InfoLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold24InfoDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold24InfoDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold24Success(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold24Success(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold24SuccessLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold24SuccessLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold24SuccessDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold24SuccessDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold24Warning(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold24Warning(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold24WarningLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold24WarningLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold24WarningDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold24WarningDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold24Danger(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold24Danger(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold24DangerLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold24DangerLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold24DangerDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold24DangerDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold26White(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold26White(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold26WhiteAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold26WhiteAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold26Black(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold26Black(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold26BlackAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold26BlackAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold26Primary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold26Primary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold26PrimaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold26PrimaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold26PrimaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold26PrimaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold26PrimaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold26PrimaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold26Secondary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold26Secondary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold26SecondaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold26SecondaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold26SecondaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold26SecondaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold26SecondaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold26SecondaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold26Accent(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold26Accent(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold26AccentInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold26AccentInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold26AccentLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold26AccentLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold26AccentDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold26AccentDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold26Grey(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold26Grey(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold26GreyLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold26GreyLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold26GreyDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold26GreyDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold26Info(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold26Info(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold26InfoLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold26InfoLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold26InfoDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold26InfoDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold26Success(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold26Success(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold26SuccessLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold26SuccessLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold26SuccessDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold26SuccessDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold26Warning(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold26Warning(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold26WarningLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold26WarningLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold26WarningDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold26WarningDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold26Danger(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold26Danger(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold26DangerLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold26DangerLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold26DangerDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold26DangerDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold28White(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold28White(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold28WhiteAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold28WhiteAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold28Black(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold28Black(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold28BlackAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold28BlackAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold28Primary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold28Primary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold28PrimaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold28PrimaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold28PrimaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold28PrimaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold28PrimaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold28PrimaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold28Secondary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold28Secondary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold28SecondaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold28SecondaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold28SecondaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold28SecondaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold28SecondaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold28SecondaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold28Accent(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold28Accent(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold28AccentInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold28AccentInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold28AccentLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold28AccentLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold28AccentDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold28AccentDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold28Grey(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold28Grey(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold28GreyLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold28GreyLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold28GreyDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold28GreyDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold28Info(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold28Info(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold28InfoLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold28InfoLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold28InfoDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold28InfoDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold28Success(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold28Success(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold28SuccessLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold28SuccessLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold28SuccessDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold28SuccessDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold28Warning(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold28Warning(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold28WarningLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold28WarningLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold28WarningDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold28WarningDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold28Danger(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold28Danger(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold28DangerLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold28DangerLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold28DangerDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold28DangerDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold32White(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold32White(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold32WhiteAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold32WhiteAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold32Black(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold32Black(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold32BlackAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold32BlackAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold32Primary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold32Primary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold32PrimaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold32PrimaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold32PrimaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold32PrimaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold32PrimaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold32PrimaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold32Secondary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold32Secondary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold32SecondaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold32SecondaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold32SecondaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold32SecondaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold32SecondaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold32SecondaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold32Accent(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold32Accent(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold32AccentInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold32AccentInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold32AccentLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold32AccentLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold32AccentDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold32AccentDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold32Grey(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold32Grey(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold32GreyLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold32GreyLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold32GreyDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold32GreyDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold32Info(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold32Info(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold32InfoLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold32InfoLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold32InfoDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold32InfoDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold32Success(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold32Success(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold32SuccessLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold32SuccessLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold32SuccessDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold32SuccessDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold32Warning(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold32Warning(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold32WarningLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold32WarningLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold32WarningDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold32WarningDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold32Danger(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold32Danger(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold32DangerLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold32DangerLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan semiBold32DangerDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.semiBold32DangerDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold10White(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold10White(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold10WhiteAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold10WhiteAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold10Black(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold10Black(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold10BlackAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold10BlackAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold10Primary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold10Primary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold10PrimaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold10PrimaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold10PrimaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold10PrimaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold10PrimaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold10PrimaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold10Secondary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold10Secondary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold10SecondaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold10SecondaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold10SecondaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold10SecondaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold10SecondaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold10SecondaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold10Accent(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold10Accent(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold10AccentInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold10AccentInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold10AccentLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold10AccentLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold10AccentDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold10AccentDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold10Grey(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold10Grey(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold10GreyLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold10GreyLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold10GreyDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold10GreyDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold10Info(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold10Info(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold10InfoLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold10InfoLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold10InfoDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold10InfoDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold10Success(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold10Success(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold10SuccessLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold10SuccessLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold10SuccessDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold10SuccessDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold10Warning(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold10Warning(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold10WarningLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold10WarningLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold10WarningDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold10WarningDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold10Danger(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold10Danger(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold10DangerLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold10DangerLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold10DangerDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold10DangerDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold11White(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold11White(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold11WhiteAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold11WhiteAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold11Black(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold11Black(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold11BlackAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold11BlackAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold11Primary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold11Primary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold11PrimaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold11PrimaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold11PrimaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold11PrimaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold11PrimaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold11PrimaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold11Secondary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold11Secondary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold11SecondaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold11SecondaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold11SecondaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold11SecondaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold11SecondaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold11SecondaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold11Accent(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold11Accent(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold11AccentInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold11AccentInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold11AccentLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold11AccentLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold11AccentDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold11AccentDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold11Grey(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold11Grey(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold11GreyLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold11GreyLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold11GreyDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold11GreyDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold11Info(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold11Info(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold11InfoLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold11InfoLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold11InfoDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold11InfoDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold11Success(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold11Success(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold11SuccessLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold11SuccessLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold11SuccessDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold11SuccessDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold11Warning(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold11Warning(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold11WarningLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold11WarningLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold11WarningDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold11WarningDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold11Danger(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold11Danger(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold11DangerLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold11DangerLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold11DangerDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold11DangerDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold12White(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold12White(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold12WhiteAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold12WhiteAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold12Black(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold12Black(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold12BlackAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold12BlackAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold12Primary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold12Primary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold12PrimaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold12PrimaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold12PrimaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold12PrimaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold12PrimaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold12PrimaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold12Secondary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold12Secondary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold12SecondaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold12SecondaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold12SecondaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold12SecondaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold12SecondaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold12SecondaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold12Accent(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold12Accent(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold12AccentInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold12AccentInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold12AccentLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold12AccentLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold12AccentDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold12AccentDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold12Grey(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold12Grey(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold12GreyLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold12GreyLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold12GreyDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold12GreyDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold12Info(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold12Info(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold12InfoLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold12InfoLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold12InfoDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold12InfoDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold12Success(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold12Success(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold12SuccessLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold12SuccessLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold12SuccessDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold12SuccessDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold12Warning(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold12Warning(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold12WarningLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold12WarningLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold12WarningDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold12WarningDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold12Danger(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold12Danger(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold12DangerLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold12DangerLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold12DangerDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold12DangerDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold13White(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold13White(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold13WhiteAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold13WhiteAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold13Black(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold13Black(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold13BlackAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold13BlackAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold13Primary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold13Primary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold13PrimaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold13PrimaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold13PrimaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold13PrimaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold13PrimaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold13PrimaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold13Secondary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold13Secondary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold13SecondaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold13SecondaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold13SecondaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold13SecondaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold13SecondaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold13SecondaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold13Accent(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold13Accent(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold13AccentInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold13AccentInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold13AccentLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold13AccentLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold13AccentDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold13AccentDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold13Grey(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold13Grey(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold13GreyLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold13GreyLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold13GreyDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold13GreyDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold13Info(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold13Info(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold13InfoLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold13InfoLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold13InfoDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold13InfoDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold13Success(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold13Success(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold13SuccessLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold13SuccessLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold13SuccessDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold13SuccessDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold13Warning(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold13Warning(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold13WarningLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold13WarningLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold13WarningDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold13WarningDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold13Danger(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold13Danger(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold13DangerLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold13DangerLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold13DangerDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold13DangerDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold14White(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold14White(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold14WhiteAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold14WhiteAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold14Black(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold14Black(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold14BlackAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold14BlackAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold14Primary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold14Primary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold14PrimaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold14PrimaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold14PrimaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold14PrimaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold14PrimaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold14PrimaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold14Secondary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold14Secondary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold14SecondaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold14SecondaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold14SecondaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold14SecondaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold14SecondaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold14SecondaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold14Accent(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold14Accent(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold14AccentInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold14AccentInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold14AccentLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold14AccentLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold14AccentDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold14AccentDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold14Grey(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold14Grey(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold14GreyLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold14GreyLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold14GreyDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold14GreyDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold14Info(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold14Info(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold14InfoLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold14InfoLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold14InfoDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold14InfoDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold14Success(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold14Success(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold14SuccessLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold14SuccessLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold14SuccessDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold14SuccessDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold14Warning(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold14Warning(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold14WarningLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold14WarningLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold14WarningDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold14WarningDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold14Danger(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold14Danger(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold14DangerLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold14DangerLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold14DangerDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold14DangerDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold15White(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold15White(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold15WhiteAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold15WhiteAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold15Black(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold15Black(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold15BlackAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold15BlackAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold15Primary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold15Primary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold15PrimaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold15PrimaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold15PrimaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold15PrimaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold15PrimaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold15PrimaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold15Secondary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold15Secondary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold15SecondaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold15SecondaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold15SecondaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold15SecondaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold15SecondaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold15SecondaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold15Accent(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold15Accent(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold15AccentInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold15AccentInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold15AccentLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold15AccentLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold15AccentDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold15AccentDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold15Grey(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold15Grey(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold15GreyLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold15GreyLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold15GreyDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold15GreyDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold15Info(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold15Info(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold15InfoLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold15InfoLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold15InfoDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold15InfoDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold15Success(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold15Success(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold15SuccessLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold15SuccessLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold15SuccessDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold15SuccessDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold15Warning(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold15Warning(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold15WarningLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold15WarningLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold15WarningDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold15WarningDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold15Danger(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold15Danger(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold15DangerLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold15DangerLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold15DangerDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold15DangerDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold16White(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold16White(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold16WhiteAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold16WhiteAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold16Black(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold16Black(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold16BlackAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold16BlackAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold16Primary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold16Primary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold16PrimaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold16PrimaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold16PrimaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold16PrimaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold16PrimaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold16PrimaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold16Secondary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold16Secondary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold16SecondaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold16SecondaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold16SecondaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold16SecondaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold16SecondaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold16SecondaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold16Accent(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold16Accent(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold16AccentInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold16AccentInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold16AccentLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold16AccentLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold16AccentDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold16AccentDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold16Grey(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold16Grey(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold16GreyLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold16GreyLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold16GreyDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold16GreyDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold16Info(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold16Info(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold16InfoLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold16InfoLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold16InfoDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold16InfoDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold16Success(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold16Success(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold16SuccessLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold16SuccessLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold16SuccessDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold16SuccessDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold16Warning(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold16Warning(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold16WarningLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold16WarningLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold16WarningDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold16WarningDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold16Danger(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold16Danger(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold16DangerLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold16DangerLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold16DangerDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold16DangerDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold17White(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold17White(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold17WhiteAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold17WhiteAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold17Black(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold17Black(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold17BlackAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold17BlackAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold17Primary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold17Primary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold17PrimaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold17PrimaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold17PrimaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold17PrimaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold17PrimaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold17PrimaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold17Secondary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold17Secondary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold17SecondaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold17SecondaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold17SecondaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold17SecondaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold17SecondaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold17SecondaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold17Accent(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold17Accent(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold17AccentInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold17AccentInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold17AccentLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold17AccentLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold17AccentDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold17AccentDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold17Grey(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold17Grey(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold17GreyLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold17GreyLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold17GreyDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold17GreyDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold17Info(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold17Info(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold17InfoLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold17InfoLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold17InfoDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold17InfoDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold17Success(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold17Success(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold17SuccessLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold17SuccessLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold17SuccessDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold17SuccessDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold17Warning(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold17Warning(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold17WarningLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold17WarningLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold17WarningDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold17WarningDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold17Danger(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold17Danger(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold17DangerLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold17DangerLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold17DangerDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold17DangerDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold18White(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold18White(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold18WhiteAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold18WhiteAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold18Black(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold18Black(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold18BlackAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold18BlackAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold18Primary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold18Primary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold18PrimaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold18PrimaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold18PrimaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold18PrimaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold18PrimaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold18PrimaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold18Secondary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold18Secondary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold18SecondaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold18SecondaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold18SecondaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold18SecondaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold18SecondaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold18SecondaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold18Accent(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold18Accent(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold18AccentInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold18AccentInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold18AccentLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold18AccentLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold18AccentDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold18AccentDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold18Grey(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold18Grey(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold18GreyLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold18GreyLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold18GreyDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold18GreyDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold18Info(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold18Info(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold18InfoLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold18InfoLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold18InfoDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold18InfoDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold18Success(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold18Success(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold18SuccessLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold18SuccessLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold18SuccessDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold18SuccessDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold18Warning(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold18Warning(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold18WarningLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold18WarningLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold18WarningDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold18WarningDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold18Danger(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold18Danger(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold18DangerLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold18DangerLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold18DangerDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold18DangerDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold19White(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold19White(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold19WhiteAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold19WhiteAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold19Black(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold19Black(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold19BlackAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold19BlackAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold19Primary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold19Primary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold19PrimaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold19PrimaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold19PrimaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold19PrimaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold19PrimaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold19PrimaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold19Secondary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold19Secondary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold19SecondaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold19SecondaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold19SecondaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold19SecondaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold19SecondaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold19SecondaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold19Accent(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold19Accent(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold19AccentInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold19AccentInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold19AccentLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold19AccentLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold19AccentDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold19AccentDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold19Grey(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold19Grey(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold19GreyLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold19GreyLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold19GreyDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold19GreyDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold19Info(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold19Info(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold19InfoLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold19InfoLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold19InfoDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold19InfoDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold19Success(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold19Success(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold19SuccessLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold19SuccessLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold19SuccessDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold19SuccessDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold19Warning(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold19Warning(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold19WarningLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold19WarningLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold19WarningDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold19WarningDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold19Danger(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold19Danger(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold19DangerLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold19DangerLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold19DangerDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold19DangerDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold20White(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold20White(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold20WhiteAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold20WhiteAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold20Black(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold20Black(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold20BlackAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold20BlackAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold20Primary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold20Primary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold20PrimaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold20PrimaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold20PrimaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold20PrimaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold20PrimaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold20PrimaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold20Secondary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold20Secondary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold20SecondaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold20SecondaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold20SecondaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold20SecondaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold20SecondaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold20SecondaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold20Accent(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold20Accent(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold20AccentInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold20AccentInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold20AccentLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold20AccentLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold20AccentDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold20AccentDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold20Grey(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold20Grey(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold20GreyLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold20GreyLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold20GreyDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold20GreyDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold20Info(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold20Info(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold20InfoLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold20InfoLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold20InfoDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold20InfoDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold20Success(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold20Success(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold20SuccessLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold20SuccessLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold20SuccessDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold20SuccessDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold20Warning(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold20Warning(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold20WarningLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold20WarningLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold20WarningDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold20WarningDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold20Danger(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold20Danger(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold20DangerLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold20DangerLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold20DangerDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold20DangerDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold22White(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold22White(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold22WhiteAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold22WhiteAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold22Black(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold22Black(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold22BlackAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold22BlackAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold22Primary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold22Primary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold22PrimaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold22PrimaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold22PrimaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold22PrimaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold22PrimaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold22PrimaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold22Secondary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold22Secondary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold22SecondaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold22SecondaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold22SecondaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold22SecondaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold22SecondaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold22SecondaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold22Accent(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold22Accent(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold22AccentInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold22AccentInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold22AccentLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold22AccentLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold22AccentDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold22AccentDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold22Grey(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold22Grey(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold22GreyLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold22GreyLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold22GreyDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold22GreyDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold22Info(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold22Info(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold22InfoLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold22InfoLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold22InfoDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold22InfoDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold22Success(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold22Success(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold22SuccessLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold22SuccessLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold22SuccessDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold22SuccessDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold22Warning(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold22Warning(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold22WarningLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold22WarningLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold22WarningDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold22WarningDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold22Danger(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold22Danger(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold22DangerLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold22DangerLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold22DangerDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold22DangerDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold24White(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold24White(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold24WhiteAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold24WhiteAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold24Black(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold24Black(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold24BlackAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold24BlackAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold24Primary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold24Primary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold24PrimaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold24PrimaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold24PrimaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold24PrimaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold24PrimaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold24PrimaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold24Secondary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold24Secondary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold24SecondaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold24SecondaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold24SecondaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold24SecondaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold24SecondaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold24SecondaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold24Accent(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold24Accent(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold24AccentInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold24AccentInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold24AccentLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold24AccentLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold24AccentDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold24AccentDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold24Grey(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold24Grey(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold24GreyLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold24GreyLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold24GreyDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold24GreyDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold24Info(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold24Info(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold24InfoLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold24InfoLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold24InfoDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold24InfoDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold24Success(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold24Success(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold24SuccessLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold24SuccessLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold24SuccessDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold24SuccessDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold24Warning(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold24Warning(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold24WarningLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold24WarningLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold24WarningDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold24WarningDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold24Danger(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold24Danger(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold24DangerLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold24DangerLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold24DangerDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold24DangerDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold26White(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold26White(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold26WhiteAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold26WhiteAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold26Black(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold26Black(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold26BlackAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold26BlackAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold26Primary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold26Primary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold26PrimaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold26PrimaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold26PrimaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold26PrimaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold26PrimaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold26PrimaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold26Secondary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold26Secondary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold26SecondaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold26SecondaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold26SecondaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold26SecondaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold26SecondaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold26SecondaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold26Accent(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold26Accent(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold26AccentInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold26AccentInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold26AccentLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold26AccentLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold26AccentDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold26AccentDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold26Grey(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold26Grey(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold26GreyLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold26GreyLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold26GreyDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold26GreyDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold26Info(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold26Info(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold26InfoLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold26InfoLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold26InfoDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold26InfoDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold26Success(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold26Success(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold26SuccessLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold26SuccessLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold26SuccessDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold26SuccessDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold26Warning(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold26Warning(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold26WarningLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold26WarningLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold26WarningDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold26WarningDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold26Danger(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold26Danger(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold26DangerLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold26DangerLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold26DangerDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold26DangerDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold28White(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold28White(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold28WhiteAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold28WhiteAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold28Black(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold28Black(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold28BlackAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold28BlackAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold28Primary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold28Primary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold28PrimaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold28PrimaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold28PrimaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold28PrimaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold28PrimaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold28PrimaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold28Secondary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold28Secondary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold28SecondaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold28SecondaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold28SecondaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold28SecondaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold28SecondaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold28SecondaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold28Accent(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold28Accent(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold28AccentInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold28AccentInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold28AccentLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold28AccentLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold28AccentDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold28AccentDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold28Grey(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold28Grey(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold28GreyLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold28GreyLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold28GreyDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold28GreyDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold28Info(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold28Info(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold28InfoLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold28InfoLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold28InfoDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold28InfoDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold28Success(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold28Success(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold28SuccessLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold28SuccessLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold28SuccessDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold28SuccessDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold28Warning(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold28Warning(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold28WarningLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold28WarningLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold28WarningDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold28WarningDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold28Danger(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold28Danger(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold28DangerLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold28DangerLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold28DangerDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold28DangerDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold32White(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold32White(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold32WhiteAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold32WhiteAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold32Black(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold32Black(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold32BlackAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold32BlackAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold32Primary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold32Primary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold32PrimaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold32PrimaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold32PrimaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold32PrimaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold32PrimaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold32PrimaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold32Secondary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold32Secondary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold32SecondaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold32SecondaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold32SecondaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold32SecondaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold32SecondaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold32SecondaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold32Accent(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold32Accent(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold32AccentInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold32AccentInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold32AccentLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold32AccentLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold32AccentDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold32AccentDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold32Grey(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold32Grey(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold32GreyLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold32GreyLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold32GreyDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold32GreyDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold32Info(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold32Info(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold32InfoLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold32InfoLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold32InfoDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold32InfoDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold32Success(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold32Success(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold32SuccessLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold32SuccessLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold32SuccessDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold32SuccessDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold32Warning(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold32Warning(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold32WarningLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold32WarningLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold32WarningDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold32WarningDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold32Danger(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold32Danger(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold32DangerLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold32DangerLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan bold32DangerDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.bold32DangerDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold10White(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold10White(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold10WhiteAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold10WhiteAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold10Black(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold10Black(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold10BlackAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold10BlackAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold10Primary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold10Primary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold10PrimaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold10PrimaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold10PrimaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold10PrimaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold10PrimaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold10PrimaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold10Secondary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold10Secondary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold10SecondaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold10SecondaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold10SecondaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold10SecondaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold10SecondaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold10SecondaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold10Accent(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold10Accent(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold10AccentInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold10AccentInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold10AccentLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold10AccentLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold10AccentDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold10AccentDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold10Grey(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold10Grey(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold10GreyLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold10GreyLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold10GreyDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold10GreyDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold10Info(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold10Info(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold10InfoLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold10InfoLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold10InfoDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold10InfoDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold10Success(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold10Success(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold10SuccessLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold10SuccessLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold10SuccessDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold10SuccessDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold10Warning(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold10Warning(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold10WarningLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold10WarningLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold10WarningDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold10WarningDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold10Danger(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold10Danger(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold10DangerLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold10DangerLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold10DangerDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold10DangerDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold11White(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold11White(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold11WhiteAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold11WhiteAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold11Black(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold11Black(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold11BlackAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold11BlackAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold11Primary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold11Primary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold11PrimaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold11PrimaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold11PrimaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold11PrimaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold11PrimaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold11PrimaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold11Secondary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold11Secondary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold11SecondaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold11SecondaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold11SecondaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold11SecondaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold11SecondaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold11SecondaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold11Accent(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold11Accent(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold11AccentInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold11AccentInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold11AccentLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold11AccentLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold11AccentDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold11AccentDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold11Grey(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold11Grey(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold11GreyLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold11GreyLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold11GreyDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold11GreyDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold11Info(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold11Info(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold11InfoLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold11InfoLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold11InfoDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold11InfoDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold11Success(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold11Success(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold11SuccessLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold11SuccessLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold11SuccessDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold11SuccessDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold11Warning(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold11Warning(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold11WarningLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold11WarningLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold11WarningDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold11WarningDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold11Danger(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold11Danger(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold11DangerLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold11DangerLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold11DangerDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold11DangerDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold12White(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold12White(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold12WhiteAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold12WhiteAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold12Black(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold12Black(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold12BlackAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold12BlackAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold12Primary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold12Primary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold12PrimaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold12PrimaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold12PrimaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold12PrimaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold12PrimaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold12PrimaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold12Secondary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold12Secondary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold12SecondaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold12SecondaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold12SecondaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold12SecondaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold12SecondaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold12SecondaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold12Accent(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold12Accent(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold12AccentInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold12AccentInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold12AccentLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold12AccentLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold12AccentDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold12AccentDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold12Grey(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold12Grey(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold12GreyLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold12GreyLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold12GreyDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold12GreyDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold12Info(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold12Info(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold12InfoLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold12InfoLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold12InfoDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold12InfoDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold12Success(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold12Success(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold12SuccessLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold12SuccessLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold12SuccessDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold12SuccessDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold12Warning(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold12Warning(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold12WarningLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold12WarningLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold12WarningDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold12WarningDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold12Danger(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold12Danger(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold12DangerLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold12DangerLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold12DangerDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold12DangerDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold13White(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold13White(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold13WhiteAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold13WhiteAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold13Black(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold13Black(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold13BlackAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold13BlackAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold13Primary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold13Primary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold13PrimaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold13PrimaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold13PrimaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold13PrimaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold13PrimaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold13PrimaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold13Secondary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold13Secondary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold13SecondaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold13SecondaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold13SecondaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold13SecondaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold13SecondaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold13SecondaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold13Accent(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold13Accent(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold13AccentInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold13AccentInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold13AccentLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold13AccentLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold13AccentDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold13AccentDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold13Grey(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold13Grey(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold13GreyLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold13GreyLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold13GreyDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold13GreyDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold13Info(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold13Info(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold13InfoLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold13InfoLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold13InfoDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold13InfoDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold13Success(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold13Success(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold13SuccessLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold13SuccessLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold13SuccessDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold13SuccessDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold13Warning(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold13Warning(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold13WarningLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold13WarningLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold13WarningDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold13WarningDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold13Danger(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold13Danger(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold13DangerLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold13DangerLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold13DangerDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold13DangerDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold14White(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold14White(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold14WhiteAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold14WhiteAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold14Black(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold14Black(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold14BlackAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold14BlackAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold14Primary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold14Primary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold14PrimaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold14PrimaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold14PrimaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold14PrimaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold14PrimaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold14PrimaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold14Secondary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold14Secondary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold14SecondaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold14SecondaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold14SecondaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold14SecondaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold14SecondaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold14SecondaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold14Accent(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold14Accent(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold14AccentInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold14AccentInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold14AccentLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold14AccentLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold14AccentDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold14AccentDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold14Grey(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold14Grey(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold14GreyLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold14GreyLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold14GreyDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold14GreyDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold14Info(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold14Info(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold14InfoLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold14InfoLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold14InfoDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold14InfoDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold14Success(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold14Success(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold14SuccessLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold14SuccessLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold14SuccessDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold14SuccessDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold14Warning(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold14Warning(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold14WarningLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold14WarningLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold14WarningDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold14WarningDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold14Danger(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold14Danger(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold14DangerLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold14DangerLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold14DangerDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold14DangerDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold15White(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold15White(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold15WhiteAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold15WhiteAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold15Black(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold15Black(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold15BlackAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold15BlackAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold15Primary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold15Primary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold15PrimaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold15PrimaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold15PrimaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold15PrimaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold15PrimaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold15PrimaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold15Secondary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold15Secondary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold15SecondaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold15SecondaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold15SecondaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold15SecondaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold15SecondaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold15SecondaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold15Accent(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold15Accent(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold15AccentInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold15AccentInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold15AccentLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold15AccentLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold15AccentDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold15AccentDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold15Grey(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold15Grey(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold15GreyLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold15GreyLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold15GreyDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold15GreyDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold15Info(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold15Info(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold15InfoLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold15InfoLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold15InfoDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold15InfoDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold15Success(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold15Success(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold15SuccessLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold15SuccessLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold15SuccessDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold15SuccessDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold15Warning(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold15Warning(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold15WarningLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold15WarningLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold15WarningDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold15WarningDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold15Danger(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold15Danger(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold15DangerLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold15DangerLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold15DangerDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold15DangerDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold16White(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold16White(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold16WhiteAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold16WhiteAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold16Black(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold16Black(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold16BlackAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold16BlackAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold16Primary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold16Primary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold16PrimaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold16PrimaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold16PrimaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold16PrimaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold16PrimaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold16PrimaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold16Secondary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold16Secondary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold16SecondaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold16SecondaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold16SecondaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold16SecondaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold16SecondaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold16SecondaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold16Accent(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold16Accent(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold16AccentInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold16AccentInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold16AccentLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold16AccentLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold16AccentDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold16AccentDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold16Grey(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold16Grey(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold16GreyLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold16GreyLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold16GreyDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold16GreyDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold16Info(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold16Info(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold16InfoLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold16InfoLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold16InfoDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold16InfoDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold16Success(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold16Success(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold16SuccessLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold16SuccessLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold16SuccessDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold16SuccessDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold16Warning(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold16Warning(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold16WarningLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold16WarningLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold16WarningDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold16WarningDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold16Danger(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold16Danger(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold16DangerLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold16DangerLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold16DangerDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold16DangerDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold17White(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold17White(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold17WhiteAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold17WhiteAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold17Black(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold17Black(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold17BlackAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold17BlackAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold17Primary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold17Primary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold17PrimaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold17PrimaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold17PrimaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold17PrimaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold17PrimaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold17PrimaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold17Secondary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold17Secondary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold17SecondaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold17SecondaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold17SecondaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold17SecondaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold17SecondaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold17SecondaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold17Accent(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold17Accent(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold17AccentInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold17AccentInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold17AccentLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold17AccentLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold17AccentDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold17AccentDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold17Grey(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold17Grey(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold17GreyLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold17GreyLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold17GreyDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold17GreyDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold17Info(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold17Info(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold17InfoLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold17InfoLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold17InfoDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold17InfoDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold17Success(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold17Success(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold17SuccessLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold17SuccessLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold17SuccessDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold17SuccessDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold17Warning(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold17Warning(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold17WarningLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold17WarningLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold17WarningDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold17WarningDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold17Danger(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold17Danger(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold17DangerLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold17DangerLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold17DangerDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold17DangerDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold18White(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold18White(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold18WhiteAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold18WhiteAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold18Black(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold18Black(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold18BlackAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold18BlackAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold18Primary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold18Primary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold18PrimaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold18PrimaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold18PrimaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold18PrimaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold18PrimaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold18PrimaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold18Secondary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold18Secondary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold18SecondaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold18SecondaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold18SecondaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold18SecondaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold18SecondaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold18SecondaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold18Accent(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold18Accent(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold18AccentInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold18AccentInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold18AccentLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold18AccentLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold18AccentDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold18AccentDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold18Grey(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold18Grey(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold18GreyLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold18GreyLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold18GreyDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold18GreyDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold18Info(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold18Info(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold18InfoLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold18InfoLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold18InfoDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold18InfoDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold18Success(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold18Success(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold18SuccessLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold18SuccessLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold18SuccessDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold18SuccessDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold18Warning(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold18Warning(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold18WarningLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold18WarningLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold18WarningDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold18WarningDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold18Danger(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold18Danger(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold18DangerLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold18DangerLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold18DangerDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold18DangerDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold19White(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold19White(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold19WhiteAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold19WhiteAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold19Black(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold19Black(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold19BlackAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold19BlackAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold19Primary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold19Primary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold19PrimaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold19PrimaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold19PrimaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold19PrimaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold19PrimaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold19PrimaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold19Secondary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold19Secondary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold19SecondaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold19SecondaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold19SecondaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold19SecondaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold19SecondaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold19SecondaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold19Accent(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold19Accent(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold19AccentInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold19AccentInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold19AccentLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold19AccentLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold19AccentDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold19AccentDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold19Grey(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold19Grey(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold19GreyLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold19GreyLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold19GreyDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold19GreyDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold19Info(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold19Info(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold19InfoLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold19InfoLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold19InfoDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold19InfoDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold19Success(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold19Success(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold19SuccessLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold19SuccessLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold19SuccessDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold19SuccessDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold19Warning(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold19Warning(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold19WarningLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold19WarningLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold19WarningDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold19WarningDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold19Danger(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold19Danger(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold19DangerLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold19DangerLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold19DangerDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold19DangerDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold20White(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold20White(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold20WhiteAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold20WhiteAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold20Black(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold20Black(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold20BlackAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold20BlackAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold20Primary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold20Primary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold20PrimaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold20PrimaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold20PrimaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold20PrimaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold20PrimaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold20PrimaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold20Secondary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold20Secondary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold20SecondaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold20SecondaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold20SecondaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold20SecondaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold20SecondaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold20SecondaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold20Accent(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold20Accent(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold20AccentInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold20AccentInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold20AccentLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold20AccentLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold20AccentDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold20AccentDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold20Grey(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold20Grey(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold20GreyLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold20GreyLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold20GreyDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold20GreyDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold20Info(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold20Info(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold20InfoLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold20InfoLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold20InfoDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold20InfoDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold20Success(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold20Success(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold20SuccessLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold20SuccessLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold20SuccessDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold20SuccessDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold20Warning(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold20Warning(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold20WarningLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold20WarningLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold20WarningDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold20WarningDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold20Danger(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold20Danger(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold20DangerLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold20DangerLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold20DangerDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold20DangerDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold22White(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold22White(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold22WhiteAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold22WhiteAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold22Black(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold22Black(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold22BlackAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold22BlackAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold22Primary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold22Primary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold22PrimaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold22PrimaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold22PrimaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold22PrimaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold22PrimaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold22PrimaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold22Secondary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold22Secondary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold22SecondaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold22SecondaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold22SecondaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold22SecondaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold22SecondaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold22SecondaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold22Accent(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold22Accent(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold22AccentInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold22AccentInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold22AccentLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold22AccentLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold22AccentDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold22AccentDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold22Grey(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold22Grey(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold22GreyLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold22GreyLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold22GreyDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold22GreyDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold22Info(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold22Info(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold22InfoLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold22InfoLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold22InfoDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold22InfoDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold22Success(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold22Success(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold22SuccessLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold22SuccessLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold22SuccessDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold22SuccessDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold22Warning(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold22Warning(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold22WarningLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold22WarningLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold22WarningDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold22WarningDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold22Danger(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold22Danger(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold22DangerLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold22DangerLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold22DangerDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold22DangerDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold24White(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold24White(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold24WhiteAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold24WhiteAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold24Black(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold24Black(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold24BlackAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold24BlackAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold24Primary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold24Primary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold24PrimaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold24PrimaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold24PrimaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold24PrimaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold24PrimaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold24PrimaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold24Secondary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold24Secondary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold24SecondaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold24SecondaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold24SecondaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold24SecondaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold24SecondaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold24SecondaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold24Accent(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold24Accent(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold24AccentInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold24AccentInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold24AccentLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold24AccentLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold24AccentDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold24AccentDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold24Grey(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold24Grey(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold24GreyLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold24GreyLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold24GreyDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold24GreyDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold24Info(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold24Info(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold24InfoLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold24InfoLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold24InfoDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold24InfoDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold24Success(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold24Success(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold24SuccessLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold24SuccessLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold24SuccessDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold24SuccessDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold24Warning(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold24Warning(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold24WarningLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold24WarningLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold24WarningDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold24WarningDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold24Danger(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold24Danger(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold24DangerLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold24DangerLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold24DangerDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold24DangerDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold26White(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold26White(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold26WhiteAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold26WhiteAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold26Black(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold26Black(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold26BlackAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold26BlackAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold26Primary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold26Primary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold26PrimaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold26PrimaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold26PrimaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold26PrimaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold26PrimaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold26PrimaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold26Secondary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold26Secondary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold26SecondaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold26SecondaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold26SecondaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold26SecondaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold26SecondaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold26SecondaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold26Accent(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold26Accent(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold26AccentInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold26AccentInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold26AccentLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold26AccentLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold26AccentDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold26AccentDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold26Grey(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold26Grey(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold26GreyLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold26GreyLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold26GreyDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold26GreyDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold26Info(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold26Info(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold26InfoLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold26InfoLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold26InfoDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold26InfoDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold26Success(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold26Success(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold26SuccessLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold26SuccessLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold26SuccessDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold26SuccessDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold26Warning(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold26Warning(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold26WarningLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold26WarningLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold26WarningDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold26WarningDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold26Danger(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold26Danger(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold26DangerLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold26DangerLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold26DangerDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold26DangerDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold28White(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold28White(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold28WhiteAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold28WhiteAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold28Black(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold28Black(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold28BlackAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold28BlackAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold28Primary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold28Primary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold28PrimaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold28PrimaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold28PrimaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold28PrimaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold28PrimaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold28PrimaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold28Secondary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold28Secondary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold28SecondaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold28SecondaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold28SecondaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold28SecondaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold28SecondaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold28SecondaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold28Accent(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold28Accent(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold28AccentInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold28AccentInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold28AccentLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold28AccentLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold28AccentDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold28AccentDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold28Grey(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold28Grey(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold28GreyLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold28GreyLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold28GreyDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold28GreyDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold28Info(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold28Info(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold28InfoLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold28InfoLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold28InfoDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold28InfoDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold28Success(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold28Success(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold28SuccessLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold28SuccessLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold28SuccessDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold28SuccessDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold28Warning(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold28Warning(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold28WarningLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold28WarningLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold28WarningDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold28WarningDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold28Danger(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold28Danger(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold28DangerLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold28DangerLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold28DangerDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold28DangerDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold32White(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold32White(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold32WhiteAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold32WhiteAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold32Black(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold32Black(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold32BlackAlways(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold32BlackAlways(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold32Primary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold32Primary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold32PrimaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold32PrimaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold32PrimaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold32PrimaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold32PrimaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold32PrimaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold32Secondary(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold32Secondary(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold32SecondaryInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold32SecondaryInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold32SecondaryLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold32SecondaryLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold32SecondaryDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold32SecondaryDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold32Accent(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold32Accent(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold32AccentInternal(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold32AccentInternal(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold32AccentLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold32AccentLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold32AccentDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold32AccentDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold32Grey(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold32Grey(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold32GreyLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold32GreyLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold32GreyDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold32GreyDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold32Info(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold32Info(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold32InfoLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold32InfoLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold32InfoDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold32InfoDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold32Success(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold32Success(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold32SuccessLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold32SuccessLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold32SuccessDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold32SuccessDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold32Warning(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold32Warning(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold32WarningLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold32WarningLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold32WarningDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold32WarningDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold32Danger(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold32Danger(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold32DangerLight(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold32DangerLight(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );

  static InlineSpan extraBold32DangerDark(
    BuildContext context,
    String text, {
    VoidCallback? onPressed,
  }) =>
      TextSpan(
        text: text,
        style: FPCTextStyle.extraBold32DangerDark(
          context,
        ),
        recognizer: TapGestureRecognizer()..onTap = onPressed,
      );
}
