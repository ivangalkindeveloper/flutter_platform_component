import 'package:flutter_platform_component/flutter_platform_component.dart';
import 'package:example/application/widget/custom/config_section.dart';
import 'package:flutter/widgets.dart';

class CircularIndicatorScreen extends StatelessWidget {
  const CircularIndicatorScreen({super.key});

  @override
  Widget build(BuildContext context) {
    final IFPCTheme theme = context.fpcTheme;
    final IFPCSize size = context.fpcSize;

    return FPCScaffold(
      backgroundColor: theme.backgroundScaffold,
      appBar: FPCScreenAppBar(
        context,
        title: "Circular Indicator",
        onPressedBack: () => Navigator.pop(context),
      ),
      body: FPCListView(
        children: [
          const ConfigSection(),
          SizedBox(height: size.s16 * 2),
          Row(
            children: [
              Column(
                mainAxisSize: MainAxisSize.min,
                children: [
                  FPCText.regular16Black(
                    context,
                    "Small",
                  ),
                  SizedBox(height: size.s16),
                  FPCCircularIndicator.smallPrimary(context),
                ],
              ),
              const Spacer(),
              Column(
                mainAxisSize: MainAxisSize.min,
                children: [
                  FPCText.regular16Black(
                    context,
                    "Default",
                  ),
                  SizedBox(height: size.s16),
                  FPCCircularIndicator.primary(context),
                ],
              ),
              const Spacer(),
              Column(
                mainAxisSize: MainAxisSize.min,
                children: [
                  FPCText.regular16Black(
                    context,
                    "Large",
                  ),
                  SizedBox(height: size.s16),
                  FPCCircularIndicator.largePrimary(context),
                ],
              ),
            ],
          ),
          SizedBox(height: size.s16 * 2),
          Row(
            children: [
              Column(
                mainAxisSize: MainAxisSize.min,
                children: [
                  FPCText.regular16Black(
                    context,
                    "Small",
                  ),
                  SizedBox(height: size.s16),
                  FPCCircularIndicator.smallPrimaryGradient(context),
                ],
              ),
              const Spacer(),
              Column(
                mainAxisSize: MainAxisSize.min,
                children: [
                  FPCText.regular16Black(
                    context,
                    "Default",
                  ),
                  SizedBox(height: size.s16),
                  FPCCircularIndicator.primaryGradient(context),
                ],
              ),
              const Spacer(),
              Column(
                mainAxisSize: MainAxisSize.min,
                children: [
                  FPCText.regular16Black(
                    context,
                    "Large",
                  ),
                  SizedBox(height: size.s16),
                  FPCCircularIndicator.largePrimaryGradient(context),
                ],
              ),
            ],
          ),
          SizedBox(height: size.s16 * 2),
          FPCText.regular16Black(
            context,
            "Small",
          ),
          SizedBox(height: size.s16),
          Wrap(
            spacing: size.s16,
            runSpacing: size.s16 / 2,
            children: [
              FPCCircularIndicator.smallWhite(context),
              FPCCircularIndicator.smallWhiteAlways(context),
              FPCCircularIndicator.smallBlack(context),
              FPCCircularIndicator.smallBlackAlways(context),
              FPCCircularIndicator.smallPrimary(context),
              FPCCircularIndicator.smallPrimaryInternal(context),
              FPCCircularIndicator.smallPrimaryGradient(context),
              FPCCircularIndicator.smallPrimaryLight(context),
              FPCCircularIndicator.smallPrimaryLightGradient(context),
              FPCCircularIndicator.smallPrimaryDark(context),
              FPCCircularIndicator.smallPrimaryDarkGradient(context),
              FPCCircularIndicator.smallSecondary(context),
              FPCCircularIndicator.smallSecondaryInternal(context),
              FPCCircularIndicator.smallSecondaryGradient(context),
              FPCCircularIndicator.smallSecondaryLight(context),
              FPCCircularIndicator.smallSecondaryLightGradient(context),
              FPCCircularIndicator.smallSecondaryDark(context),
              FPCCircularIndicator.smallSecondaryDarkGradient(context),
              FPCCircularIndicator.smallGrey(context),
              FPCCircularIndicator.smallGreyGradient(context),
              FPCCircularIndicator.smallGreyLight(context),
              FPCCircularIndicator.smallGreyLightGradient(context),
              FPCCircularIndicator.smallGreyDark(context),
              FPCCircularIndicator.smallGreyDarkGradient(context),
              FPCCircularIndicator.smallInfo(context),
              FPCCircularIndicator.smallInfoGradient(context),
              FPCCircularIndicator.smallInfoLight(context),
              FPCCircularIndicator.smallInfoLightGradient(context),
              FPCCircularIndicator.smallInfoDark(context),
              FPCCircularIndicator.smallInfoDarkGradient(context),
              FPCCircularIndicator.smallSuccess(context),
              FPCCircularIndicator.smallSuccessGradient(context),
              FPCCircularIndicator.smallSuccessLight(context),
              FPCCircularIndicator.smallSuccessLightGradient(context),
              FPCCircularIndicator.smallSuccessDark(context),
              FPCCircularIndicator.smallSuccessDarkGradient(context),
              FPCCircularIndicator.smallWarning(context),
              FPCCircularIndicator.smallWarningGradient(context),
              FPCCircularIndicator.smallWarningLight(context),
              FPCCircularIndicator.smallWarningLightGradient(context),
              FPCCircularIndicator.smallWarningDark(context),
              FPCCircularIndicator.smallWarningDarkGradient(context),
              FPCCircularIndicator.smallDanger(context),
              FPCCircularIndicator.smallDangerGradient(context),
              FPCCircularIndicator.smallDangerLight(context),
              FPCCircularIndicator.smallDangerLightGradient(context),
              FPCCircularIndicator.smallDangerDark(context),
              FPCCircularIndicator.smallDangerDarkGradient(context),
            ],
          ),
          SizedBox(height: size.s16),
          FPCText.regular16Black(
            context,
            "Default",
          ),
          SizedBox(height: size.s16),
          Wrap(
            spacing: size.s16,
            runSpacing: size.s16 / 2,
            children: [
              FPCCircularIndicator.white(context),
              FPCCircularIndicator.whiteAlways(context),
              FPCCircularIndicator.black(context),
              FPCCircularIndicator.blackAlways(context),
              FPCCircularIndicator.primary(context),
              FPCCircularIndicator.primaryInternal(context),
              FPCCircularIndicator.primaryGradient(context),
              FPCCircularIndicator.primaryLight(context),
              FPCCircularIndicator.primaryLightGradient(context),
              FPCCircularIndicator.primaryDark(context),
              FPCCircularIndicator.primaryDarkGradient(context),
              FPCCircularIndicator.secondary(context),
              FPCCircularIndicator.secondaryInternal(context),
              FPCCircularIndicator.secondaryGradient(context),
              FPCCircularIndicator.secondaryLight(context),
              FPCCircularIndicator.secondaryLightGradient(context),
              FPCCircularIndicator.secondaryDark(context),
              FPCCircularIndicator.secondaryDarkGradient(context),
              FPCCircularIndicator.grey(context),
              FPCCircularIndicator.greyGradient(context),
              FPCCircularIndicator.greyLight(context),
              FPCCircularIndicator.greyLightGradient(context),
              FPCCircularIndicator.greyDark(context),
              FPCCircularIndicator.greyDarkGradient(context),
              FPCCircularIndicator.info(context),
              FPCCircularIndicator.infoGradient(context),
              FPCCircularIndicator.infoLight(context),
              FPCCircularIndicator.infoLightGradient(context),
              FPCCircularIndicator.infoDark(context),
              FPCCircularIndicator.infoDarkGradient(context),
              FPCCircularIndicator.success(context),
              FPCCircularIndicator.successGradient(context),
              FPCCircularIndicator.successLight(context),
              FPCCircularIndicator.successLightGradient(context),
              FPCCircularIndicator.successDark(context),
              FPCCircularIndicator.successDarkGradient(context),
              FPCCircularIndicator.warning(context),
              FPCCircularIndicator.warningGradient(context),
              FPCCircularIndicator.warningLight(context),
              FPCCircularIndicator.warningLightGradient(context),
              FPCCircularIndicator.warningDark(context),
              FPCCircularIndicator.warningDarkGradient(context),
              FPCCircularIndicator.danger(context),
              FPCCircularIndicator.dangerGradient(context),
              FPCCircularIndicator.dangerLight(context),
              FPCCircularIndicator.dangerLightGradient(context),
              FPCCircularIndicator.dangerDark(context),
              FPCCircularIndicator.dangerDarkGradient(context),
            ],
          ),
          SizedBox(height: size.s16),
          FPCText.regular16Black(
            context,
            "Large",
          ),
          SizedBox(height: size.s16),
          Wrap(
            spacing: size.s16,
            runSpacing: size.s16 / 2,
            children: [
              FPCCircularIndicator.largeWhite(context),
              FPCCircularIndicator.largeWhiteAlways(context),
              FPCCircularIndicator.largeBlack(context),
              FPCCircularIndicator.largeBlackAlways(context),
              FPCCircularIndicator.largePrimary(context),
              FPCCircularIndicator.largePrimaryInternal(context),
              FPCCircularIndicator.largePrimaryGradient(context),
              FPCCircularIndicator.largePrimaryLight(context),
              FPCCircularIndicator.largePrimaryLightGradient(context),
              FPCCircularIndicator.largePrimaryDark(context),
              FPCCircularIndicator.largePrimaryDarkGradient(context),
              FPCCircularIndicator.largeSecondary(context),
              FPCCircularIndicator.largeSecondaryInternal(context),
              FPCCircularIndicator.largeSecondaryGradient(context),
              FPCCircularIndicator.largeSecondaryLight(context),
              FPCCircularIndicator.largeSecondaryLightGradient(context),
              FPCCircularIndicator.largeSecondaryDark(context),
              FPCCircularIndicator.largeSecondaryDarkGradient(context),
              FPCCircularIndicator.largeGrey(context),
              FPCCircularIndicator.largeGreyGradient(context),
              FPCCircularIndicator.largeGreyLight(context),
              FPCCircularIndicator.largeGreyLightGradient(context),
              FPCCircularIndicator.largeGreyDark(context),
              FPCCircularIndicator.largeGreyDarkGradient(context),
              FPCCircularIndicator.largeInfo(context),
              FPCCircularIndicator.largeInfoGradient(context),
              FPCCircularIndicator.largeInfoLight(context),
              FPCCircularIndicator.largeInfoLightGradient(context),
              FPCCircularIndicator.largeInfoDark(context),
              FPCCircularIndicator.largeInfoDarkGradient(context),
              FPCCircularIndicator.largeSuccess(context),
              FPCCircularIndicator.largeSuccessGradient(context),
              FPCCircularIndicator.largeSuccessLight(context),
              FPCCircularIndicator.largeSuccessLightGradient(context),
              FPCCircularIndicator.largeSuccessDark(context),
              FPCCircularIndicator.largeSuccessDarkGradient(context),
              FPCCircularIndicator.largeWarning(context),
              FPCCircularIndicator.largeWarningGradient(context),
              FPCCircularIndicator.largeWarningLight(context),
              FPCCircularIndicator.largeWarningLightGradient(context),
              FPCCircularIndicator.largeWarningDark(context),
              FPCCircularIndicator.largeWarningDarkGradient(context),
              FPCCircularIndicator.largeDanger(context),
              FPCCircularIndicator.largeDangerGradient(context),
              FPCCircularIndicator.largeDangerLight(context),
              FPCCircularIndicator.largeDangerLightGradient(context),
              FPCCircularIndicator.largeDangerDark(context),
              FPCCircularIndicator.largeDangerDarkGradient(context),
            ],
          ),
        ],
      ),
    );
  }
}
