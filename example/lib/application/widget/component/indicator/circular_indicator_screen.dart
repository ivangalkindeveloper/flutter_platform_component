import 'package:flutter_platform_component/flutter_platform_component.dart';
import 'package:example/application/widget/custom/app_bar_config.dart';
import 'package:flutter/widgets.dart';
import 'package:gap/gap.dart';

class CircularIndicatorScreen extends StatelessWidget {
  const CircularIndicatorScreen({
    super.key,
  });

  @override
  Widget build(
    BuildContext context,
  ) {
    final FPCSize size = context.fpcSize;

    return FPCScaffold(
      appBar: AppBarConfig(
        context,
        title: "Circular Indicator",
        onPressedBack: () => Navigator.pop(context),
      ),
      body: FPCListView(
        children: [
          Row(
            children: [
              Column(
                mainAxisSize: MainAxisSize.min,
                children: [
                  FPCText.regular16Black(
                    context,
                    "Small",
                  ),
                  Gap(size.s16),
                  const FPCPrimarySmallCircularIndicator(),
                ],
              ),
              const Spacer(),
              Column(
                mainAxisSize: MainAxisSize.min,
                children: [
                  FPCText.regular16Black(
                    context,
                    "Default",
                  ),
                  Gap(size.s16),
                  const FPCPrimaryCircularIndicator(),
                ],
              ),
              const Spacer(),
              Column(
                mainAxisSize: MainAxisSize.min,
                children: [
                  FPCText.regular16Black(
                    context,
                    "Large",
                  ),
                  Gap(size.s16),
                  const FPCPrimaryLargeCircularIndicator(),
                ],
              ),
            ],
          ),
          Gap(size.s16 * 2),
          Row(
            children: [
              Column(
                mainAxisSize: MainAxisSize.min,
                children: [
                  FPCText.regular16Black(
                    context,
                    "Small",
                  ),
                  Gap(size.s16),
                  const FPCPrimaryGradientSmallCircularIndicator(),
                ],
              ),
              const Spacer(),
              Column(
                mainAxisSize: MainAxisSize.min,
                children: [
                  FPCText.regular16Black(
                    context,
                    "Default",
                  ),
                  Gap(size.s16),
                  const FPCPrimaryGradientCircularIndicator(),
                ],
              ),
              const Spacer(),
              Column(
                mainAxisSize: MainAxisSize.min,
                children: [
                  FPCText.regular16Black(
                    context,
                    "Large",
                  ),
                  Gap(size.s16),
                  const FPCPrimaryLargeCircularIndicator(),
                ],
              ),
            ],
          ),
          Gap(size.s16 * 2),
          FPCText.regular16Black(
            context,
            "Small",
          ),
          Gap(size.s16),
          Wrap(
            spacing: size.s16,
            runSpacing: size.s16 / 2,
            children: const [
              FPCWhiteSmallCircularIndicator(),
              FPCWhiteAlwaysSmallCircularIndicator(),
              FPCBlackSmallCircularIndicator(),
              FPCBlackAlwaysSmallCircularIndicator(),
              FPCPrimarySmallCircularIndicator(),
              FPCPrimaryInternalSmallCircularIndicator(),
              FPCPrimaryGradientSmallCircularIndicator(),
              FPCPrimaryLightSmallCircularIndicator(),
              FPCPrimaryLightGradientSmallCircularIndicator(),
              FPCPrimaryDarkSmallCircularIndicator(),
              FPCPrimaryDarkGradientSmallCircularIndicator(),
              FPCSecondarySmallCircularIndicator(),
              FPCSecondaryInternalSmallCircularIndicator(),
              FPCSecondaryGradientSmallCircularIndicator(),
              FPCSecondaryLightSmallCircularIndicator(),
              FPCSecondaryLightGradientSmallCircularIndicator(),
              FPCSecondaryDarkSmallCircularIndicator(),
              FPCSecondaryDarkGradientSmallCircularIndicator(),
              FPCGreySmallCircularIndicator(),
              FPCGreyGradientSmallCircularIndicator(),
              FPCGreyLightSmallCircularIndicator(),
              FPCGreyLightGradientSmallCircularIndicator(),
              FPCGreyDarkSmallCircularIndicator(),
              FPCGreyDarkGradientSmallCircularIndicator(),
              FPCInfoSmallCircularIndicator(),
              FPCInfoGradientSmallCircularIndicator(),
              FPCInfoLightSmallCircularIndicator(),
              FPCInfoLightGradientSmallCircularIndicator(),
              FPCInfoDarkSmallCircularIndicator(),
              FPCInfoDarkGradientSmallCircularIndicator(),
              FPCSuccessSmallCircularIndicator(),
              FPCSuccessGradientSmallCircularIndicator(),
              FPCSuccessLightSmallCircularIndicator(),
              FPCSuccessLightGradientSmallCircularIndicator(),
              FPCSuccessDarkSmallCircularIndicator(),
              FPCSuccessDarkGradientSmallCircularIndicator(),
              FPCWarningSmallCircularIndicator(),
              FPCWarningGradientSmallCircularIndicator(),
              FPCWarningLightSmallCircularIndicator(),
              FPCWarningLightGradientSmallCircularIndicator(),
              FPCWarningDarkSmallCircularIndicator(),
              FPCWarningDarkGradientSmallCircularIndicator(),
              FPCDangerSmallCircularIndicator(),
              FPCDangerGradientSmallCircularIndicator(),
              FPCDangerLightSmallCircularIndicator(),
              FPCDangerLightGradientSmallCircularIndicator(),
              FPCDangerDarkSmallCircularIndicator(),
              FPCDangerDarkGradientSmallCircularIndicator(),
            ],
          ),
          Gap(size.s16),
          FPCText.regular16Black(
            context,
            "Default",
          ),
          Gap(size.s16),
          Wrap(
            spacing: size.s16,
            runSpacing: size.s16 / 2,
            children: const [
              FPCWhiteCircularIndicator(),
              FPCWhiteAlwaysCircularIndicator(),
              FPCBlackCircularIndicator(),
              FPCBlackAlwaysCircularIndicator(),
              FPCPrimaryCircularIndicator(),
              FPCPrimaryInternalCircularIndicator(),
              FPCPrimaryGradientCircularIndicator(),
              FPCPrimaryLightCircularIndicator(),
              FPCPrimaryLightGradientCircularIndicator(),
              FPCPrimaryDarkCircularIndicator(),
              FPCPrimaryDarkGradientCircularIndicator(),
              FPCSecondaryCircularIndicator(),
              FPCSecondaryInternalCircularIndicator(),
              FPCSecondaryGradientCircularIndicator(),
              FPCSecondaryLightCircularIndicator(),
              FPCSecondaryLightGradientCircularIndicator(),
              FPCSecondaryDarkCircularIndicator(),
              FPCSecondaryDarkGradientCircularIndicator(),
              FPCGreyCircularIndicator(),
              FPCGreyGradientCircularIndicator(),
              FPCGreyLightCircularIndicator(),
              FPCGreyLightGradientCircularIndicator(),
              FPCGreyDarkCircularIndicator(),
              FPCGreyDarkGradientCircularIndicator(),
              FPCInfoCircularIndicator(),
              FPCInfoGradientCircularIndicator(),
              FPCInfoLightCircularIndicator(),
              FPCInfoLightGradientCircularIndicator(),
              FPCInfoDarkCircularIndicator(),
              FPCInfoDarkGradientCircularIndicator(),
              FPCSuccessCircularIndicator(),
              FPCSuccessGradientCircularIndicator(),
              FPCSuccessLightCircularIndicator(),
              FPCSuccessLightGradientCircularIndicator(),
              FPCSuccessDarkCircularIndicator(),
              FPCSuccessDarkGradientCircularIndicator(),
              FPCWarningCircularIndicator(),
              FPCWarningGradientCircularIndicator(),
              FPCWarningLightCircularIndicator(),
              FPCWarningLightGradientCircularIndicator(),
              FPCWarningDarkCircularIndicator(),
              FPCWarningDarkGradientCircularIndicator(),
              FPCDangerCircularIndicator(),
              FPCDangerGradientCircularIndicator(),
              FPCDangerLightCircularIndicator(),
              FPCDangerLightGradientCircularIndicator(),
              FPCDangerDarkCircularIndicator(),
              FPCDangerDarkGradientCircularIndicator(),
            ],
          ),
          Gap(size.s16),
          FPCText.regular16Black(
            context,
            "Large",
          ),
          Gap(size.s16),
          Wrap(
            spacing: size.s16,
            runSpacing: size.s16 / 2,
            children: const [
              FPCWhiteLargeCircularIndicator(),
              FPCWhiteAlwaysLargeCircularIndicator(),
              FPCBlackLargeCircularIndicator(),
              FPCBlackAlwaysLargeCircularIndicator(),
              FPCPrimaryLargeCircularIndicator(),
              FPCPrimaryInternalLargeCircularIndicator(),
              FPCPrimaryGradientLargeCircularIndicator(),
              FPCPrimaryLightLargeCircularIndicator(),
              FPCPrimaryLightGradientLargeCircularIndicator(),
              FPCPrimaryDarkLargeCircularIndicator(),
              FPCPrimaryDarkGradientLargeCircularIndicator(),
              FPCSecondaryLargeCircularIndicator(),
              FPCSecondaryInternalLargeCircularIndicator(),
              FPCSecondaryGradientLargeCircularIndicator(),
              FPCSecondaryLightLargeCircularIndicator(),
              FPCSecondaryLightGradientLargeCircularIndicator(),
              FPCSecondaryDarkLargeCircularIndicator(),
              FPCSecondaryDarkGradientLargeCircularIndicator(),
              FPCGreyLargeCircularIndicator(),
              FPCGreyGradientLargeCircularIndicator(),
              FPCGreyLightLargeCircularIndicator(),
              FPCGreyLightGradientLargeCircularIndicator(),
              FPCGreyDarkLargeCircularIndicator(),
              FPCGreyDarkGradientLargeCircularIndicator(),
              FPCInfoLargeCircularIndicator(),
              FPCInfoGradientLargeCircularIndicator(),
              FPCInfoLightLargeCircularIndicator(),
              FPCInfoLightGradientLargeCircularIndicator(),
              FPCInfoDarkLargeCircularIndicator(),
              FPCInfoDarkGradientLargeCircularIndicator(),
              FPCSuccessLargeCircularIndicator(),
              FPCSuccessGradientLargeCircularIndicator(),
              FPCSuccessLightLargeCircularIndicator(),
              FPCSuccessLightGradientLargeCircularIndicator(),
              FPCSuccessDarkLargeCircularIndicator(),
              FPCSuccessDarkGradientLargeCircularIndicator(),
              FPCWarningLargeCircularIndicator(),
              FPCWarningGradientLargeCircularIndicator(),
              FPCWarningLightLargeCircularIndicator(),
              FPCWarningLightGradientLargeCircularIndicator(),
              FPCWarningDarkLargeCircularIndicator(),
              FPCWarningDarkGradientLargeCircularIndicator(),
              FPCDangerLargeCircularIndicator(),
              FPCDangerGradientLargeCircularIndicator(),
              FPCDangerLightLargeCircularIndicator(),
              FPCDangerLightGradientLargeCircularIndicator(),
              FPCDangerDarkLargeCircularIndicator(),
              FPCDangerDarkGradientLargeCircularIndicator(),
            ],
          ),
        ],
      ),
    );
  }
}
