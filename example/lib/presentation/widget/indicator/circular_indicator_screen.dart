import 'package:example/presentation/config/config_section.dart';
import 'package:flutter_platform_component/flutter_platform_component.dart';
import 'package:flutter/widgets.dart';

class CircularIndicatorScreen extends StatelessWidget {
  const CircularIndicatorScreen({Key? key});

  @override
  Widget build(BuildContext context) {
    final IFPCTheme theme = context.componentTheme;
    final IFPCSize size = context.componentSize;

    return FPCScaffold(
      backgroundColor: theme.backgroundScaffold,
      appBar: FPCScreenAppBar(
        context: context,
        title: "Circular Indicator",
        onPressedBack: () => Navigator.pop(context),
      ),
      body: FPCListView(
        children: [
          const ConfigSection(),
          SizedBox(height: size.s16 * 2),
          Row(
            children: [
              Column(
                mainAxisSize: MainAxisSize.min,
                children: [
                  FPCText.regular16Black(
                    context: context,
                    text: "Small",
                  ),
                  SizedBox(height: size.s16),
                  FPCCircularIndicator.smallPrimary(context: context),
                ],
              ),
              const Spacer(),
              Column(
                mainAxisSize: MainAxisSize.min,
                children: [
                  FPCText.regular16Black(
                    context: context,
                    text: "Default",
                  ),
                  SizedBox(height: size.s16),
                  FPCCircularIndicator.primary(context: context),
                ],
              ),
              const Spacer(),
              Column(
                mainAxisSize: MainAxisSize.min,
                children: [
                  FPCText.regular16Black(
                    context: context,
                    text: "Large",
                  ),
                  SizedBox(height: size.s16),
                  FPCCircularIndicator.largePrimary(context: context),
                ],
              ),
            ],
          ),
          SizedBox(height: size.s16 * 2),
          Row(
            children: [
              Column(
                mainAxisSize: MainAxisSize.min,
                children: [
                  FPCText.regular16Black(
                    context: context,
                    text: "Small",
                  ),
                  SizedBox(height: size.s16),
                  FPCCircularIndicator.smallPrimaryGradient(context: context),
                ],
              ),
              const Spacer(),
              Column(
                mainAxisSize: MainAxisSize.min,
                children: [
                  FPCText.regular16Black(
                    context: context,
                    text: "Default",
                  ),
                  SizedBox(height: size.s16),
                  FPCCircularIndicator.primaryGradient(context: context),
                ],
              ),
              const Spacer(),
              Column(
                mainAxisSize: MainAxisSize.min,
                children: [
                  FPCText.regular16Black(
                    context: context,
                    text: "Large",
                  ),
                  SizedBox(height: size.s16),
                  FPCCircularIndicator.largePrimaryGradient(context: context),
                ],
              ),
            ],
          ),
          SizedBox(height: size.s16 * 2),
          FPCText.regular16Black(
            context: context,
            text: "Small",
          ),
          SizedBox(height: size.s16),
          Wrap(
            spacing: size.s16,
            runSpacing: size.s16 / 2,
            children: [
              FPCCircularIndicator.smallWhite(context: context),
              FPCCircularIndicator.smallWhiteAlways(context: context),
              FPCCircularIndicator.smallBlack(context: context),
              FPCCircularIndicator.smallBlackAlways(context: context),
              FPCCircularIndicator.smallPrimary(context: context),
              FPCCircularIndicator.smallPrimaryInternal(context: context),
              FPCCircularIndicator.smallPrimaryGradient(context: context),
              FPCCircularIndicator.smallPrimaryLight(context: context),
              FPCCircularIndicator.smallPrimaryLightGradient(context: context),
              FPCCircularIndicator.smallPrimaryDark(context: context),
              FPCCircularIndicator.smallPrimaryDarkGradient(context: context),
              FPCCircularIndicator.smallSecondary(context: context),
              FPCCircularIndicator.smallSecondaryInternal(context: context),
              FPCCircularIndicator.smallSecondaryGradient(context: context),
              FPCCircularIndicator.smallSecondaryLight(context: context),
              FPCCircularIndicator.smallSecondaryLightGradient(
                  context: context),
              FPCCircularIndicator.smallSecondaryDark(context: context),
              FPCCircularIndicator.smallSecondaryDarkGradient(context: context),
              FPCCircularIndicator.smallGrey(context: context),
              FPCCircularIndicator.smallGreyGradient(context: context),
              FPCCircularIndicator.smallGreyLight(context: context),
              FPCCircularIndicator.smallGreyLightGradient(context: context),
              FPCCircularIndicator.smallGreyDark(context: context),
              FPCCircularIndicator.smallGreyDarkGradient(context: context),
              FPCCircularIndicator.smallInfo(context: context),
              FPCCircularIndicator.smallInfoGradient(context: context),
              FPCCircularIndicator.smallInfoLight(context: context),
              FPCCircularIndicator.smallInfoLightGradient(context: context),
              FPCCircularIndicator.smallInfoDark(context: context),
              FPCCircularIndicator.smallInfoDarkGradient(context: context),
              FPCCircularIndicator.smallSuccess(context: context),
              FPCCircularIndicator.smallSuccessGradient(context: context),
              FPCCircularIndicator.smallSuccessLight(context: context),
              FPCCircularIndicator.smallSuccessLightGradient(context: context),
              FPCCircularIndicator.smallSuccessDark(context: context),
              FPCCircularIndicator.smallSuccessDarkGradient(context: context),
              FPCCircularIndicator.smallWarning(context: context),
              FPCCircularIndicator.smallWarningGradient(context: context),
              FPCCircularIndicator.smallWarningLight(context: context),
              FPCCircularIndicator.smallWarningLightGradient(context: context),
              FPCCircularIndicator.smallWarningDark(context: context),
              FPCCircularIndicator.smallWarningDarkGradient(context: context),
              FPCCircularIndicator.smallDanger(context: context),
              FPCCircularIndicator.smallDangerGradient(context: context),
              FPCCircularIndicator.smallDangerLight(context: context),
              FPCCircularIndicator.smallDangerLightGradient(context: context),
              FPCCircularIndicator.smallDangerDark(context: context),
              FPCCircularIndicator.smallDangerDarkGradient(context: context),
            ],
          ),
          SizedBox(height: size.s16),
          FPCText.regular16Black(
            context: context,
            text: "Default",
          ),
          SizedBox(height: size.s16),
          Wrap(
            spacing: size.s16,
            runSpacing: size.s16 / 2,
            children: [
              FPCCircularIndicator.white(context: context),
              FPCCircularIndicator.whiteAlways(context: context),
              FPCCircularIndicator.black(context: context),
              FPCCircularIndicator.blackAlways(context: context),
              FPCCircularIndicator.primary(context: context),
              FPCCircularIndicator.primaryInternal(context: context),
              FPCCircularIndicator.primaryGradient(context: context),
              FPCCircularIndicator.primaryLight(context: context),
              FPCCircularIndicator.primaryLightGradient(context: context),
              FPCCircularIndicator.primaryDark(context: context),
              FPCCircularIndicator.primaryDarkGradient(context: context),
              FPCCircularIndicator.secondary(context: context),
              FPCCircularIndicator.secondaryInternal(context: context),
              FPCCircularIndicator.secondaryGradient(context: context),
              FPCCircularIndicator.secondaryLight(context: context),
              FPCCircularIndicator.secondaryLightGradient(context: context),
              FPCCircularIndicator.secondaryDark(context: context),
              FPCCircularIndicator.secondaryDarkGradient(context: context),
              FPCCircularIndicator.grey(context: context),
              FPCCircularIndicator.greyGradient(context: context),
              FPCCircularIndicator.greyLight(context: context),
              FPCCircularIndicator.greyLightGradient(context: context),
              FPCCircularIndicator.greyDark(context: context),
              FPCCircularIndicator.greyDarkGradient(context: context),
              FPCCircularIndicator.info(context: context),
              FPCCircularIndicator.infoGradient(context: context),
              FPCCircularIndicator.infoLight(context: context),
              FPCCircularIndicator.infoLightGradient(context: context),
              FPCCircularIndicator.infoDark(context: context),
              FPCCircularIndicator.infoDarkGradient(context: context),
              FPCCircularIndicator.success(context: context),
              FPCCircularIndicator.successGradient(context: context),
              FPCCircularIndicator.successLight(context: context),
              FPCCircularIndicator.successLightGradient(context: context),
              FPCCircularIndicator.successDark(context: context),
              FPCCircularIndicator.successDarkGradient(context: context),
              FPCCircularIndicator.warning(context: context),
              FPCCircularIndicator.warningGradient(context: context),
              FPCCircularIndicator.warningLight(context: context),
              FPCCircularIndicator.warningLightGradient(context: context),
              FPCCircularIndicator.warningDark(context: context),
              FPCCircularIndicator.warningDarkGradient(context: context),
              FPCCircularIndicator.danger(context: context),
              FPCCircularIndicator.dangerGradient(context: context),
              FPCCircularIndicator.dangerLight(context: context),
              FPCCircularIndicator.dangerLightGradient(context: context),
              FPCCircularIndicator.dangerDark(context: context),
              FPCCircularIndicator.dangerDarkGradient(context: context),
            ],
          ),
          SizedBox(height: size.s16),
          FPCText.regular16Black(
            context: context,
            text: "Large",
          ),
          SizedBox(height: size.s16),
          Wrap(
            spacing: size.s16,
            runSpacing: size.s16 / 2,
            children: [
              FPCCircularIndicator.largeWhite(context: context),
              FPCCircularIndicator.largeWhiteAlways(context: context),
              FPCCircularIndicator.largeBlack(context: context),
              FPCCircularIndicator.largeBlackAlways(context: context),
              FPCCircularIndicator.largePrimary(context: context),
              FPCCircularIndicator.largePrimaryInternal(context: context),
              FPCCircularIndicator.largePrimaryGradient(context: context),
              FPCCircularIndicator.largePrimaryLight(context: context),
              FPCCircularIndicator.largePrimaryLightGradient(context: context),
              FPCCircularIndicator.largePrimaryDark(context: context),
              FPCCircularIndicator.largePrimaryDarkGradient(context: context),
              FPCCircularIndicator.largeSecondary(context: context),
              FPCCircularIndicator.largeSecondaryInternal(context: context),
              FPCCircularIndicator.largeSecondaryGradient(context: context),
              FPCCircularIndicator.largeSecondaryLight(context: context),
              FPCCircularIndicator.largeSecondaryLightGradient(
                  context: context),
              FPCCircularIndicator.largeSecondaryDark(context: context),
              FPCCircularIndicator.largeSecondaryDarkGradient(context: context),
              FPCCircularIndicator.largeGrey(context: context),
              FPCCircularIndicator.largeGreyGradient(context: context),
              FPCCircularIndicator.largeGreyLight(context: context),
              FPCCircularIndicator.largeGreyLightGradient(context: context),
              FPCCircularIndicator.largeGreyDark(context: context),
              FPCCircularIndicator.largeGreyDarkGradient(context: context),
              FPCCircularIndicator.largeInfo(context: context),
              FPCCircularIndicator.largeInfoGradient(context: context),
              FPCCircularIndicator.largeInfoLight(context: context),
              FPCCircularIndicator.largeInfoLightGradient(context: context),
              FPCCircularIndicator.largeInfoDark(context: context),
              FPCCircularIndicator.largeInfoDarkGradient(context: context),
              FPCCircularIndicator.largeSuccess(context: context),
              FPCCircularIndicator.largeSuccessGradient(context: context),
              FPCCircularIndicator.largeSuccessLight(context: context),
              FPCCircularIndicator.largeSuccessLightGradient(context: context),
              FPCCircularIndicator.largeSuccessDark(context: context),
              FPCCircularIndicator.largeSuccessDarkGradient(context: context),
              FPCCircularIndicator.largeWarning(context: context),
              FPCCircularIndicator.largeWarningGradient(context: context),
              FPCCircularIndicator.largeWarningLight(context: context),
              FPCCircularIndicator.largeWarningLightGradient(context: context),
              FPCCircularIndicator.largeWarningDark(context: context),
              FPCCircularIndicator.largeWarningDarkGradient(context: context),
              FPCCircularIndicator.largeDanger(context: context),
              FPCCircularIndicator.largeDangerGradient(context: context),
              FPCCircularIndicator.largeDangerLight(context: context),
              FPCCircularIndicator.largeDangerLightGradient(context: context),
              FPCCircularIndicator.largeDangerDark(context: context),
              FPCCircularIndicator.largeDangerDarkGradient(context: context),
            ],
          ),
        ],
      ),
    );
  }
}
